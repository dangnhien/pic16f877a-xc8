

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Aug 22 18:51:44 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  0088                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0008                     	;# 
   184  0009                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000D                     	;# 
   189  000E                     	;# 
   190  000E                     	;# 
   191  000F                     	;# 
   192  0010                     	;# 
   193  0011                     	;# 
   194  0012                     	;# 
   195  0013                     	;# 
   196  0014                     	;# 
   197  0015                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  001D                     	;# 
   208  001E                     	;# 
   209  001F                     	;# 
   210  0081                     	;# 
   211  0085                     	;# 
   212  0086                     	;# 
   213  0087                     	;# 
   214  0088                     	;# 
   215  0089                     	;# 
   216  008C                     	;# 
   217  008D                     	;# 
   218  008E                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235                           
   236                           	psect	idataBANK0
   237  06A4                     __pidataBANK0:
   238                           
   239                           ;initializer for hienThiViTriCoDinhN@F1005
   240  06A4  34FF               	retlw	255
   241  06A5  34FF               	retlw	255
   242  06A6  3400               	retlw	0
   243  06A7  346E               	retlw	110
   244  06A8  346E               	retlw	110
   245  06A9  3491               	retlw	145
   246  06AA  34FF               	retlw	255
   247  06AB  34FF               	retlw	255
   248  06AC  34FF               	retlw	255
   249  06AD  34BB               	retlw	187
   250  06AE  34BD               	retlw	189
   251  06AF  3480               	retlw	128
   252  06B0  34BF               	retlw	191
   253  06B1  34BF               	retlw	191
   254  06B2  34FF               	retlw	255
   255  06B3  34FF               	retlw	255
   256  06B4  34FF               	retlw	255
   257  06B5  34BD               	retlw	189
   258  06B6  347E               	retlw	126
   259  06B7  3466               	retlw	102
   260  06B8  3466               	retlw	102
   261  06B9  3499               	retlw	153
   262  06BA  34FF               	retlw	255
   263  06BB  34FF               	retlw	255
   264                           
   265                           ;initializer for _control
   266  06BC  3401               	retlw	1
   267  06BD  3402               	retlw	2
   268  06BE  3404               	retlw	4
   269  06BF  3408               	retlw	8
   270  06C0  3410               	retlw	16
   271  06C1  3420               	retlw	32
   272  06C2  3440               	retlw	64
   273  06C3  3408               	retlw	8
   274                           
   275                           	psect	idataBANK1
   276  06C4                     __pidataBANK1:
   277                           
   278                           ;initializer for run_char@F1010
   279  06C4  34FF               	retlw	255
   280  06C5  34FF               	retlw	255
   281  06C6  34FF               	retlw	255
   282  06C7  34FF               	retlw	255
   283  06C8  34FF               	retlw	255
   284  06C9  34FF               	retlw	255
   285  06CA  34FF               	retlw	255
   286  06CB  34FF               	retlw	255
   287  06CC  34FF               	retlw	255
   288  06CD  3483               	retlw	131
   289  06CE  34F5               	retlw	245
   290  06CF  34F6               	retlw	246
   291  06D0  34F5               	retlw	245
   292  06D1  3483               	retlw	131
   293  06D2  34FF               	retlw	255
   294  06D3  34FF               	retlw	255
   295  06D4  34FF               	retlw	255
   296  06D5  34FF               	retlw	255
   297  06D6  3480               	retlw	128
   298  06D7  34B6               	retlw	182
   299  06D8  34B6               	retlw	182
   300  06D9  34C1               	retlw	193
   301  06DA  34FF               	retlw	255
   302  06DB  34FF               	retlw	255
   303  06DC  34FF               	retlw	255
   304  06DD  3481               	retlw	129
   305  06DE  347E               	retlw	126
   306  06DF  347E               	retlw	126
   307  06E0  347E               	retlw	126
   308  06E1  34BD               	retlw	189
   309  06E2  34FF               	retlw	255
   310  06E3  34FF               	retlw	255
   311  06E4  34FF               	retlw	255
   312  06E5  34FF               	retlw	255
   313  06E6  34FF               	retlw	255
   314  06E7  34FF               	retlw	255
   315  06E8  34FF               	retlw	255
   316  06E9  34FF               	retlw	255
   317  06EA  34FF               	retlw	255
   318  06EB  34FF               	retlw	255
   319                           
   320                           	psect	idataBANK3
   321  0730                     __pidataBANK3:
   322                           
   323                           ;initializer for _data
   324  0730  34FF               	retlw	255
   325  0731  3481               	retlw	129
   326  0732  347E               	retlw	126
   327  0733  347E               	retlw	126
   328  0734  347E               	retlw	126
   329  0735  347E               	retlw	126
   330  0736  3481               	retlw	129
   331  0737  34FF               	retlw	255
   332  0738  34FF               	retlw	255
   333  0739  347B               	retlw	123
   334  073A  347D               	retlw	125
   335  073B  3400               	retlw	0
   336  073C  3400               	retlw	0
   337  073D  347F               	retlw	127
   338  073E  347F               	retlw	127
   339  073F  34FF               	retlw	255
   340  0740  343D               	retlw	61
   341  0741  345E               	retlw	94
   342  0742  346E               	retlw	110
   343  0743  3476               	retlw	118
   344  0744  3439               	retlw	57
   345  0745  34FF               	retlw	255
   346  0746  34FF               	retlw	255
   347  0747  34FF               	retlw	255
   348  0748  34FF               	retlw	255
   349  0749  34BD               	retlw	189
   350  074A  3476               	retlw	118
   351  074B  3476               	retlw	118
   352  074C  3476               	retlw	118
   353  074D  3489               	retlw	137
   354  074E  34FF               	retlw	255
   355  074F  34FF               	retlw	255
   356  0750  34EF               	retlw	239
   357  0751  34E7               	retlw	231
   358  0752  34EB               	retlw	235
   359  0753  346D               	retlw	109
   360  0754  3400               	retlw	0
   361  0755  346F               	retlw	111
   362  0756  34EF               	retlw	239
   363  0757  34FF               	retlw	255
   364  0758  34FF               	retlw	255
   365  0759  3478               	retlw	120
   366  075A  347A               	retlw	122
   367  075B  347A               	retlw	122
   368  075C  34BA               	retlw	186
   369  075D  34C6               	retlw	198
   370  075E  34FF               	retlw	255
   371  075F  34FF               	retlw	255
   372  0760  34FF               	retlw	255
   373  0761  3481               	retlw	129
   374  0762  3476               	retlw	118
   375  0763  3476               	retlw	118
   376  0764  3476               	retlw	118
   377  0765  348D               	retlw	141
   378  0766  34FF               	retlw	255
   379  0767  34FF               	retlw	255
   380  0768  34FF               	retlw	255
   381  0769  34FF               	retlw	255
   382  076A  34FC               	retlw	252
   383  076B  34FE               	retlw	254
   384  076C  34FE               	retlw	254
   385  076D  34FE               	retlw	254
   386  076E  3400               	retlw	0
   387  076F  34FF               	retlw	255
   388  0770  34FF               	retlw	255
   389  0771  3489               	retlw	137
   390  0772  3476               	retlw	118
   391  0773  3476               	retlw	118
   392  0774  3476               	retlw	118
   393  0775  3489               	retlw	137
   394  0776  34FF               	retlw	255
   395  0777  34FF               	retlw	255
   396  0778  34FF               	retlw	255
   397  0779  34B9               	retlw	185
   398  077A  3476               	retlw	118
   399  077B  3476               	retlw	118
   400  077C  3476               	retlw	118
   401  077D  3481               	retlw	129
   402  077E  34FF               	retlw	255
   403  077F  34FF               	retlw	255
   404  0007                     _PORTC	set	7
   405  0006                     _PORTB	set	6
   406  0086                     _TRISB	set	134
   407  0087                     _TRISC	set	135
   408  009F                     _ADCON1	set	159
   409                           
   410                           	psect	cinit
   411  07D3                     start_initialization:	
   412                           ; #config settings
   413                           
   414  07D3                     __initialization:
   415                           
   416                           ; Initialize objects allocated to BANK3
   417  07D3  1783               	bsf	3,7	;select IRP bank2
   418  07D4  30E0               	movlw	low (__pdataBANK3+80)
   419  07D5  00FD               	movwf	btemp+-1
   420  07D6  3007               	movlw	high __pidataBANK3
   421  07D7  00FE               	movwf	btemp
   422  07D8  3030               	movlw	low __pidataBANK3
   423  07D9  00FF               	movwf	btemp+1
   424  07DA  3090               	movlw	low __pdataBANK3
   425  07DB  0084               	movwf	4
   426  07DC  120A  118A  267C  120A  118A  	fcall	init_ram0
   427                           
   428                           ; Initialize objects allocated to BANK1
   429  07E1  1383               	bcf	3,7	;select IRP bank0
   430  07E2  30C8               	movlw	low (__pdataBANK1+40)
   431  07E3  00FD               	movwf	btemp+-1
   432  07E4  3006               	movlw	high __pidataBANK1
   433  07E5  00FE               	movwf	btemp
   434  07E6  30C4               	movlw	low __pidataBANK1
   435  07E7  00FF               	movwf	btemp+1
   436  07E8  30A0               	movlw	low __pdataBANK1
   437  07E9  0084               	movwf	4
   438  07EA  120A  118A  267C  120A  118A  	fcall	init_ram0
   439                           
   440                           ; Initialize objects allocated to BANK0
   441  07EF  306A               	movlw	low (__pdataBANK0+32)
   442  07F0  00FD               	movwf	btemp+-1
   443  07F1  3006               	movlw	high __pidataBANK0
   444  07F2  00FE               	movwf	btemp
   445  07F3  30A4               	movlw	low __pidataBANK0
   446  07F4  00FF               	movwf	btemp+1
   447  07F5  304A               	movlw	low __pdataBANK0
   448  07F6  0084               	movwf	4
   449  07F7  120A  118A  267C  120A  118A  	fcall	init_ram0
   450  07FC                     end_of_initialization:	
   451                           ;End of C runtime variable initialization code
   452                           
   453  07FC                     __end_of__initialization:
   454  07FC  0183               	clrf	3
   455  07FD  120A  118A  2E65   	ljmp	_main	;jump to C main() function
   456                           
   457                           	psect	dataBANK0
   458  004A                     __pdataBANK0:
   459  004A                     hienThiViTriCoDinhN@F1005:
   460  004A                     	ds	24
   461  0062                     _control:
   462  0062                     	ds	8
   463                           
   464                           	psect	dataBANK1
   465  00A0                     __pdataBANK1:
   466  00A0                     run_char@F1010:
   467  00A0                     	ds	40
   468                           
   469                           	psect	dataBANK3
   470  0190                     __pdataBANK3:
   471  0190                     _data:
   472  0190                     	ds	80
   473                           
   474                           	psect	inittext
   475  0678                     init_fetch0:	
   476                           ;	Called with low address in FSR and high address in W
   477                           
   478  0678  087E               	movf	btemp,w
   479  0679  008A               	movwf	10
   480  067A  087F               	movf	btemp+1,w
   481  067B  0082               	movwf	2
   482  067C                     init_ram0:	
   483                           ;Called with:
   484                           ;	high address of idata address in btemp 
   485                           ;	low address of idata address in btemp+1 
   486                           ;	low address of data in FSR
   487                           ;	high address + 1 of data in btemp-1
   488                           
   489  067C  120A  118A  2678  120A  118A  	fcall	init_fetch0
   490  0681  0080               	movwf	0
   491  0682  0A84               	incf	4,f
   492  0683  0804               	movf	4,w
   493  0684  067D               	xorwf	btemp+-1,w
   494  0685  1903               	btfsc	3,2
   495  0686  3400               	retlw	0
   496  0687  0AFF               	incf	btemp+1,f
   497  0688  1903               	btfsc	3,2
   498  0689  0AFE               	incf	btemp,f
   499  068A  2E7C               	goto	init_ram0
   500                           
   501                           	psect	cstackCOMMON
   502  0070                     __pcstackCOMMON:
   503  0070                     ?_run_char:
   504  0070                     ?_main:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_Display_Led_Matrix:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_strlen:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     Display_Led_Matrix@array:	
   514                           ; 2 bytes @ 0x0
   515                           
   516                           
   517                           ; 1 bytes @ 0x0
   518  0070                     	ds	1
   519  0071                     ??_Display_Led_Matrix:
   520                           
   521                           ; 1 bytes @ 0x1
   522  0071                     	ds	1
   523  0072                     ??_strlen:
   524                           
   525                           ; 1 bytes @ 0x2
   526  0072                     	ds	1
   527  0073                     strlen@s:
   528                           
   529                           ; 1 bytes @ 0x3
   530  0073                     	ds	1
   531  0074                     Display_Led_Matrix@Code:
   532  0074                     strlen@cp:	
   533                           ; 1 bytes @ 0x4
   534                           
   535                           
   536                           ; 1 bytes @ 0x4
   537  0074                     	ds	1
   538  0075                     Display_Led_Matrix@Index:
   539                           
   540                           ; 1 bytes @ 0x5
   541  0075                     	ds	1
   542  0076                     Display_Led_Matrix@Code_Shift:
   543                           
   544                           ; 1 bytes @ 0x6
   545  0076                     	ds	1
   546  0077                     Display_Led_Matrix@i:
   547                           
   548                           ; 1 bytes @ 0x7
   549  0077                     	ds	1
   550  0078                     ??_run_char:
   551                           
   552                           ; 1 bytes @ 0x8
   553  0078                     	ds	4
   554  007C                     ??_main:
   555                           
   556                           	psect	cstackBANK0
   557  0020                     __pcstackBANK0:	
   558                           ; 1 bytes @ 0xC
   559                           
   560  0020                     run_char@Array:
   561                           
   562                           ; 40 bytes @ 0x0
   563  0020                     	ds	40
   564  0048                     run_char@Index:
   565                           
   566                           ; 1 bytes @ 0x28
   567  0048                     	ds	1
   568  0049                     run_char@i:
   569                           
   570                           ; 1 bytes @ 0x29
   571  0049                     	ds	1
   572                           
   573                           	psect	maintext
   574  0665                     __pmaintext:	
   575 ;;
   576 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   577 ;;
   578 ;; *************** function _main *****************
   579 ;; Defined at:
   580 ;;		line 23 in file "main.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   589 ;; Tracked objects:
   590 ;;		On entry : B00/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   594 ;;      Params:         0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0
   596 ;;      Temps:          0       0       0       0       0
   597 ;;      Totals:         0       0       0       0       0
   598 ;;Total ram usage:        0 bytes
   599 ;; Hardware stack levels required when called:    2
   600 ;; This function calls:
   601 ;;		_run_char
   602 ;; This function is called by:
   603 ;;		Startup code after reset
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           
   608                           ;psect for function _main
   609  0665                     _main:
   610  0665                     l910:	
   611                           ;incstack = 0
   612                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   613                           
   614                           
   615                           ;main.c: 24:     ADCON1 = 0x06;
   616  0665  3006               	movlw	6
   617  0666  1683               	bsf	3,5	;RP0=1, select bank1
   618  0667  1303               	bcf	3,6	;RP1=0, select bank1
   619  0668  009F               	movwf	31	;volatile
   620  0669                     l912:
   621                           
   622                           ;main.c: 26:     TRISC = 0x00;
   623  0669  0187               	clrf	7	;volatile
   624  066A                     l914:
   625                           
   626                           ;main.c: 27:     TRISB = 0x00;
   627  066A  0186               	clrf	6	;volatile
   628  066B                     l916:
   629                           
   630                           ;main.c: 29:     PORTC=0x00;
   631  066B  1283               	bcf	3,5	;RP0=0, select bank0
   632  066C  1303               	bcf	3,6	;RP1=0, select bank0
   633  066D  0187               	clrf	7	;volatile
   634  066E                     l918:
   635                           
   636                           ;main.c: 30:     PORTB=0x00;
   637  066E  0186               	clrf	6	;volatile
   638  066F                     l920:
   639                           
   640                           ;main.c: 33:     {;main.c: 35:         run_char();
   641  066F  120A  118A  2780  120A  118A  	fcall	_run_char
   642  0674  2E6F               	goto	l920
   643  0675  120A  118A  2800   	ljmp	start
   644  0678                     __end_of_main:
   645                           
   646                           	psect	text1
   647  0780                     __ptext1:	
   648 ;; *************** function _run_char *****************
   649 ;; Defined at:
   650 ;;		line 84 in file "main.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;  i               1   41[BANK0 ] unsigned char 
   655 ;;  Index           1   40[BANK0 ] unsigned char 
   656 ;;  Array          40    0[BANK0 ] unsigned char [40]
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   666 ;;      Params:         0       0       0       0       0
   667 ;;      Locals:         0      42       0       0       0
   668 ;;      Temps:          4       0       0       0       0
   669 ;;      Totals:         4      42       0       0       0
   670 ;;Total ram usage:       46 bytes
   671 ;; Hardware stack levels used:    1
   672 ;; Hardware stack levels required when called:    1
   673 ;; This function calls:
   674 ;;		_Display_Led_Matrix
   675 ;;		_strlen
   676 ;; This function is called by:
   677 ;;		_main
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           
   682                           ;psect for function _run_char
   683  0780                     _run_char:
   684  0780                     l858:	
   685                           ;incstack = 0
   686                           ; Regs used in _run_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   687                           
   688                           
   689                           ;main.c: 86:     char Array[]={
   690  0780  3020               	movlw	run_char@Array& (0+255)
   691  0781  0084               	movwf	4
   692  0782  30A0               	movlw	low run_char@F1010
   693  0783  00F8               	movwf	??_run_char
   694  0784  0804               	movf	4,w
   695  0785  00F9               	movwf	??_run_char+1
   696  0786  3028               	movlw	40
   697  0787  00FA               	movwf	??_run_char+2
   698  0788                     u170:
   699  0788  0878               	movf	??_run_char,w
   700  0789  0084               	movwf	4
   701  078A  1383               	bcf	3,7	;select IRP bank1
   702  078B  0800               	movf	0,w
   703  078C  00FB               	movwf	??_run_char+3
   704  078D  0AF8               	incf	??_run_char,f
   705  078E  0879               	movf	??_run_char+1,w
   706  078F  0084               	movwf	4
   707  0790  087B               	movf	??_run_char+3,w
   708  0791  0080               	movwf	0
   709  0792  0AF9               	incf	??_run_char+1,f
   710  0793  0BFA               	decfsz	??_run_char+2,f
   711  0794  2F88               	goto	u170
   712  0795                     l860:
   713                           
   714                           ;main.c: 95:     for(char Index = 0; Index<=(char)(strlen(Array)+1-10); Index++)
   715  0795  1283               	bcf	3,5	;RP0=0, select bank0
   716  0796  1303               	bcf	3,6	;RP1=0, select bank0
   717  0797  01C8               	clrf	run_char@Index
   718  0798  2FBD               	goto	l878
   719  0799                     l862:
   720                           
   721                           ;main.c: 97:     {;main.c: 98:         for(char i=0; i<=10; i++)
   722  0799  01C9               	clrf	run_char@i
   723  079A                     l868:
   724                           
   725                           ;main.c: 99:         {;main.c: 100:             Display_Led_Matrix(Index, Array);
   726  079A  3020               	movlw	(low (run_char@Array| 0))& (0+255)
   727  079B  00F8               	movwf	??_run_char
   728  079C  0878               	movf	??_run_char,w
   729  079D  00F0               	movwf	Display_Led_Matrix@array
   730  079E  0848               	movf	run_char@Index,w
   731  079F  120A  118A  26EC  120A  118A  	fcall	_Display_Led_Matrix
   732  07A4                     l870:
   733                           
   734                           ;main.c: 101:             _delay((unsigned long)((10)*(16000000/4000.0)));
   735  07A4  3034               	movlw	52
   736  07A5  00F9               	movwf	??_run_char+1
   737  07A6  30F1               	movlw	241
   738  07A7  00F8               	movwf	??_run_char
   739  07A8                     u257:
   740  07A8  0BF8               	decfsz	??_run_char,f
   741  07A9  2FA8               	goto	u257
   742  07AA  0BF9               	decfsz	??_run_char+1,f
   743  07AB  2FA8               	goto	u257
   744  07AC  2FAD               	nop2
   745  07AD                     l872:
   746                           
   747                           ;main.c: 102:         }
   748  07AD  3001               	movlw	1
   749  07AE  00F8               	movwf	??_run_char
   750  07AF  0878               	movf	??_run_char,w
   751  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   752  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   753  07B2  07C9               	addwf	run_char@i,f
   754  07B3                     l874:
   755  07B3  300B               	movlw	11
   756  07B4  0249               	subwf	run_char@i,w
   757  07B5  1C03               	skipc
   758  07B6  2FB8               	goto	u181
   759  07B7  2FB9               	goto	u180
   760  07B8                     u181:
   761  07B8  2F9A               	goto	l868
   762  07B9                     u180:
   763  07B9                     l876:
   764                           
   765                           ;main.c: 103:     }
   766  07B9  3001               	movlw	1
   767  07BA  00F8               	movwf	??_run_char
   768  07BB  0878               	movf	??_run_char,w
   769  07BC  07C8               	addwf	run_char@Index,f
   770  07BD                     l878:
   771  07BD  3020               	movlw	(low (run_char@Array| 0))& (0+255)
   772  07BE  120A  118A  268B  120A  118A  	fcall	_strlen
   773  07C3  0870               	movf	?_strlen,w
   774  07C4  00F8               	movwf	??_run_char
   775  07C5  0871               	movf	?_strlen+1,w
   776  07C6  00F9               	movwf	??_run_char+1
   777  07C7  30F7               	movlw	247
   778  07C8  0778               	addwf	??_run_char,w
   779  07C9  00FA               	movwf	??_run_char+2
   780  07CA  1283               	bcf	3,5	;RP0=0, select bank0
   781  07CB  1303               	bcf	3,6	;RP1=0, select bank0
   782  07CC  0848               	movf	run_char@Index,w
   783  07CD  027A               	subwf	??_run_char+2,w
   784  07CE  1803               	skipnc
   785  07CF  2FD1               	goto	u191
   786  07D0  2FD2               	goto	u190
   787  07D1                     u191:
   788  07D1  2F99               	goto	l862
   789  07D2                     u190:
   790  07D2                     l74:
   791  07D2  0008               	return
   792  07D3                     __end_of_run_char:
   793                           
   794                           	psect	text2
   795  068B                     __ptext2:	
   796 ;; *************** function _strlen *****************
   797 ;; Defined at:
   798 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strlen.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  s               1    wreg     PTR const unsigned char 
   801 ;;		 -> run_char@Array(40), 
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  s               1    3[COMMON] PTR const unsigned char 
   804 ;;		 -> run_char@Array(40), 
   805 ;;  cp              1    4[COMMON] PTR const unsigned char 
   806 ;;		 -> run_char@Array(40), 
   807 ;; Return value:  Size  Location     Type
   808 ;;                  2    0[COMMON] unsigned int 
   809 ;; Registers used:
   810 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   816 ;;      Params:         2       0       0       0       0
   817 ;;      Locals:         2       0       0       0       0
   818 ;;      Temps:          1       0       0       0       0
   819 ;;      Totals:         5       0       0       0       0
   820 ;;Total ram usage:        5 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; This function calls:
   823 ;;		Nothing
   824 ;; This function is called by:
   825 ;;		_run_char
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           
   830                           ;psect for function _strlen
   831  068B                     _strlen:
   832                           
   833                           ;incstack = 0
   834                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
   835                           ;strlen@s stored from wreg
   836  068B  00F3               	movwf	strlen@s
   837  068C                     l830:
   838  068C  0873               	movf	strlen@s,w
   839  068D  00F2               	movwf	??_strlen
   840  068E  0872               	movf	??_strlen,w
   841  068F  00F4               	movwf	strlen@cp
   842  0690  2E95               	goto	l834
   843  0691                     l832:
   844  0691  3001               	movlw	1
   845  0692  00F2               	movwf	??_strlen
   846  0693  0872               	movf	??_strlen,w
   847  0694  07F4               	addwf	strlen@cp,f
   848  0695                     l834:
   849  0695  0874               	movf	strlen@cp,w
   850  0696  0084               	movwf	4
   851  0697  1383               	bcf	3,7	;select IRP bank0
   852  0698  0800               	movf	0,w
   853  0699  1D03               	btfss	3,2
   854  069A  2E9C               	goto	u141
   855  069B  2E9D               	goto	u140
   856  069C                     u141:
   857  069C  2E91               	goto	l832
   858  069D                     u140:
   859  069D                     l836:
   860  069D  0873               	movf	strlen@s,w
   861  069E  0274               	subwf	strlen@cp,w
   862  069F  00F0               	movwf	?_strlen
   863  06A0  01F1               	clrf	?_strlen+1
   864  06A1  1BF0               	btfsc	?_strlen,7
   865  06A2  03F1               	decf	?_strlen+1,f
   866  06A3                     l614:
   867  06A3  0008               	return
   868  06A4                     __end_of_strlen:
   869                           
   870                           	psect	text3
   871  06EC                     __ptext3:	
   872 ;; *************** function _Display_Led_Matrix *****************
   873 ;; Defined at:
   874 ;;		line 44 in file "main.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;  Index           1    wreg     unsigned char 
   877 ;;  array           1    0[COMMON] PTR unsigned char 
   878 ;;		 -> run_char@Array(40), hienThiViTriCoDinhN@Array(24), 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  Index           1    5[COMMON] unsigned char 
   881 ;;  i               1    7[COMMON] unsigned char 
   882 ;;  Code_Shift      1    6[COMMON] unsigned char 
   883 ;;  Code            1    4[COMMON] unsigned char 
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   893 ;;      Params:         1       0       0       0       0
   894 ;;      Locals:         4       0       0       0       0
   895 ;;      Temps:          3       0       0       0       0
   896 ;;      Totals:         8       0       0       0       0
   897 ;;Total ram usage:        8 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_run_char
   903 ;;		_hienThiViTriCoDinhN
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           
   908                           ;psect for function _Display_Led_Matrix
   909  06EC                     _Display_Led_Matrix:
   910                           
   911                           ;incstack = 0
   912                           ; Regs used in _Display_Led_Matrix: [wreg-fsr0h+status,2+status,0]
   913                           ;Display_Led_Matrix@Index stored from wreg
   914  06EC  00F5               	movwf	Display_Led_Matrix@Index
   915  06ED                     l810:
   916                           
   917                           ;main.c: 45:     char Code_Shift = 0x01;
   918  06ED  01F6               	clrf	Display_Led_Matrix@Code_Shift
   919  06EE  0AF6               	incf	Display_Led_Matrix@Code_Shift,f
   920  06EF                     l812:
   921                           
   922                           ;main.c: 46:     char Code;;main.c: 47:     char i;;main.c: 49:     for(i=Index; i<= Ind
      +                          ex+7; i++){
   923  06EF  0875               	movf	Display_Led_Matrix@Index,w
   924  06F0  00F1               	movwf	??_Display_Led_Matrix
   925  06F1  0871               	movf	??_Display_Led_Matrix,w
   926  06F2  00F7               	movwf	Display_Led_Matrix@i
   927  06F3  2F1B               	goto	l828
   928  06F4                     l814:
   929                           
   930                           ;main.c: 50:         Code = ~Code_Shift;
   931  06F4  0976               	comf	Display_Led_Matrix@Code_Shift,w
   932  06F5  00F1               	movwf	??_Display_Led_Matrix
   933  06F6  0871               	movf	??_Display_Led_Matrix,w
   934  06F7  00F4               	movwf	Display_Led_Matrix@Code
   935  06F8                     l816:
   936                           
   937                           ;main.c: 51:         PORTC = array[i];
   938  06F8  0877               	movf	Display_Led_Matrix@i,w
   939  06F9  0770               	addwf	Display_Led_Matrix@array,w
   940  06FA  00F1               	movwf	??_Display_Led_Matrix
   941  06FB  0871               	movf	??_Display_Led_Matrix,w
   942  06FC  0084               	movwf	4
   943  06FD  1383               	bcf	3,7	;select IRP bank0
   944  06FE  0800               	movf	0,w
   945  06FF  1283               	bcf	3,5	;RP0=0, select bank0
   946  0700  1303               	bcf	3,6	;RP1=0, select bank0
   947  0701  0087               	movwf	7	;volatile
   948  0702                     l818:
   949                           
   950                           ;main.c: 52:         PORTB = Code;
   951  0702  0874               	movf	Display_Led_Matrix@Code,w
   952  0703  0086               	movwf	6	;volatile
   953  0704                     l820:
   954                           
   955                           ;main.c: 53:         _delay((unsigned long)((1)*(16000000/4000.0)));
   956  0704  3006               	movlw	6
   957  0705  00F2               	movwf	??_Display_Led_Matrix+1
   958  0706  3030               	movlw	48
   959  0707  00F1               	movwf	??_Display_Led_Matrix
   960  0708                     u267:
   961  0708  0BF1               	decfsz	??_Display_Led_Matrix,f
   962  0709  2F08               	goto	u267
   963  070A  0BF2               	decfsz	??_Display_Led_Matrix+1,f
   964  070B  2F08               	goto	u267
   965  070C  0000               	nop
   966  070D                     l822:
   967                           
   968                           ;main.c: 54:         PORTB = 0xFF;
   969  070D  30FF               	movlw	255
   970  070E  1283               	bcf	3,5	;RP0=0, select bank0
   971  070F  1303               	bcf	3,6	;RP1=0, select bank0
   972  0710  0086               	movwf	6	;volatile
   973  0711                     l824:
   974                           
   975                           ;main.c: 55:         Code_Shift = (char)(Code_Shift << 1);
   976  0711  0876               	movf	Display_Led_Matrix@Code_Shift,w
   977  0712  00F1               	movwf	??_Display_Led_Matrix
   978  0713  0771               	addwf	??_Display_Led_Matrix,w
   979  0714  00F2               	movwf	??_Display_Led_Matrix+1
   980  0715  0872               	movf	??_Display_Led_Matrix+1,w
   981  0716  00F6               	movwf	Display_Led_Matrix@Code_Shift
   982  0717                     l826:
   983                           
   984                           ;main.c: 56:     }
   985  0717  3001               	movlw	1
   986  0718  00F1               	movwf	??_Display_Led_Matrix
   987  0719  0871               	movf	??_Display_Led_Matrix,w
   988  071A  07F7               	addwf	Display_Led_Matrix@i,f
   989  071B                     l828:
   990  071B  0875               	movf	Display_Led_Matrix@Index,w
   991  071C  3E07               	addlw	7
   992  071D  00F1               	movwf	??_Display_Led_Matrix
   993  071E  3000               	movlw	0
   994  071F  1803               	skipnc
   995  0720  3001               	movlw	1
   996  0721  00F2               	movwf	??_Display_Led_Matrix+1
   997  0722  0872               	movf	??_Display_Led_Matrix+1,w
   998  0723  3A80               	xorlw	128
   999  0724  00F3               	movwf	??_Display_Led_Matrix+2
  1000  0725  3080               	movlw	128
  1001  0726  0273               	subwf	??_Display_Led_Matrix+2,w
  1002  0727  1D03               	skipz
  1003  0728  2F2B               	goto	u135
  1004  0729  0877               	movf	Display_Led_Matrix@i,w
  1005  072A  0271               	subwf	??_Display_Led_Matrix,w
  1006  072B                     u135:
  1007  072B  1803               	skipnc
  1008  072C  2F2E               	goto	u131
  1009  072D  2F2F               	goto	u130
  1010  072E                     u131:
  1011  072E  2EF4               	goto	l814
  1012  072F                     u130:
  1013  072F                     l55:
  1014  072F  0008               	return
  1015  0730                     __end_of_Display_Led_Matrix:
  1016  007E                     btemp	set	126	;btemp
  1017  007E                     wtemp0	set	126
  1018                           
  1019                           	psect	config
  1020                           
  1021                           ;Config register CONFIG @ 0x2007
  1022                           ;	Oscillator Selection bits
  1023                           ;	FOSC = HS, HS oscillator
  1024                           ;	Watchdog Timer Enable bit
  1025                           ;	WDTE = OFF, WDT disabled
  1026                           ;	Power-up Timer Enable bit
  1027                           ;	PWRTE = ON, PWRT enabled
  1028                           ;	Brown-out Reset Enable bit
  1029                           ;	BOREN = ON, BOR enabled
  1030                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1031                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1032                           ;	Data EEPROM Memory Code Protection bit
  1033                           ;	CPD = OFF, Data EEPROM code protection off
  1034                           ;	Flash Program Memory Write Enable bits
  1035                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1036                           ;	In-Circuit Debugger Mode bit
  1037                           ;	DEBUG = 0x1, unprogrammed default
  1038                           ;	Flash Program Memory Code Protection bit
  1039                           ;	CP = OFF, Code protection off
  1040  2007                     	org	8199
  1041  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        152
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     42      74
    BANK1            80      0      40
    BANK3            96      0      80
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 40
		 -> run_char@Array(BANK0[40]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 40
		 -> run_char@Array(BANK0[40]), 

    Display_Led_Matrix@array	PTR unsigned char  size(1) Largest target is 40
		 -> run_char@Array(BANK0[40]), hienThiViTriCoDinhN@Array(BANK0[24]), 


Critical Paths under _main in COMMON

    _main->_run_char
    _run_char->_Display_Led_Matrix

Critical Paths under _main in BANK0

    _main->_run_char

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     595
                           _run_char
 ---------------------------------------------------------------------------------
 (1) _run_char                                            46    46      0     595
                                              8 COMMON     4     4      0
                                              0 BANK0     42    42      0
                 _Display_Led_Matrix
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _Display_Led_Matrix                                   8     7      1     333
                                              0 COMMON     8     7      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _run_char
     _Display_Led_Matrix
     _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      50       9       83.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      28       7       50.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CE      12        0.0%
ABS                  0      0      CE       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Aug 22 18:51:44 2022

                           pc 0002                            l55 072F                            l74 07D2  
                          fsr 0004                           l614 06A3                           l810 06ED  
                         l820 0704                           l812 06EF                           l822 070D  
                         l814 06F4                           l830 068C                           l910 0665  
                         l824 0711                           l816 06F8                           l832 0691  
                         l920 066F                           l912 0669                           l826 0717  
                         l818 0702                           l834 0695                           l914 066A  
                         l828 071B                           l836 069D                           l860 0795  
                         l916 066B                           l870 07A4                           l862 0799  
                         l918 066E                           l872 07AD                           l874 07B3  
                         l858 0780                           l876 07B9                           l868 079A  
                         l878 07BD                           u130 072F                           u131 072E  
                         u140 069D                           u141 069C                           u135 072B  
                         u170 0788                           u180 07B9                           u181 07B8  
                         u190 07D2                           u191 07D1                           u257 07A8  
                         u267 0708                           fsr0 0004                           indf 0000  
      Display_Led_Matrix@Code 0074                          _data 0190                          _main 0665  
                        btemp 007E                          start 0000                         ?_main 0070  
                       _PORTB 0006                         _PORTC 0007                         _TRISB 0086  
                       _TRISC 0087       Display_Led_Matrix@Index 0075       Display_Led_Matrix@array 0070  
                       pclath 000A                         status 0003                         wtemp0 007E  
             __initialization 07D3                  __end_of_main 0678                        ??_main 007C  
 __size_of_Display_Led_Matrix 0044                        _ADCON1 009F                        _strlen 068B  
            __end_of_run_char 07D3       __end_of__initialization 07FC                __pcstackCOMMON 0070  
                __pidataBANK0 06A4                  __pidataBANK1 06C4                  __pidataBANK3 0730  
                  __pmaintext 0665                       ?_strlen 0070                 run_char@F1010 00A0  
               run_char@Array 0020                 run_char@Index 0048           Display_Led_Matrix@i 0077  
                   ?_run_char 0070                       __ptext1 0780                       __ptext2 068B  
                     __ptext3 06EC               __size_of_strlen 0019                       _control 0062  
        end_of_initialization 07FC                    ??_run_char 0078                       strlen@s 0073  
  __end_of_Display_Led_Matrix 0730      hienThiViTriCoDinhN@F1005 004A                __end_of_strlen 06A4  
         start_initialization 07D3                    init_fetch0 0678                   __pdataBANK0 004A  
                 __pdataBANK1 00A0                   __pdataBANK3 0190                      ??_strlen 0072  
                   ___latbits 0002                 __pcstackBANK0 0020             __size_of_run_char 0053  
Display_Led_Matrix@Code_Shift 0076            _Display_Led_Matrix 06EC           ?_Display_Led_Matrix 0070  
        ??_Display_Led_Matrix 0071                 __size_of_main 0013                      _run_char 0780  
                   run_char@i 0049                      init_ram0 067C                      strlen@cp 0074  
