

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Aug 21 19:20:19 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  0088                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177  0000                     	;# 
   178  0001                     	;# 
   179  0002                     	;# 
   180  0003                     	;# 
   181  0004                     	;# 
   182  0005                     	;# 
   183  0006                     	;# 
   184  0007                     	;# 
   185  0008                     	;# 
   186  0009                     	;# 
   187  000A                     	;# 
   188  000B                     	;# 
   189  000C                     	;# 
   190  000D                     	;# 
   191  000E                     	;# 
   192  000E                     	;# 
   193  000F                     	;# 
   194  0010                     	;# 
   195  0011                     	;# 
   196  0012                     	;# 
   197  0013                     	;# 
   198  0014                     	;# 
   199  0015                     	;# 
   200  0015                     	;# 
   201  0016                     	;# 
   202  0017                     	;# 
   203  0018                     	;# 
   204  0019                     	;# 
   205  001A                     	;# 
   206  001B                     	;# 
   207  001B                     	;# 
   208  001C                     	;# 
   209  001D                     	;# 
   210  001E                     	;# 
   211  001F                     	;# 
   212  0081                     	;# 
   213  0085                     	;# 
   214  0086                     	;# 
   215  0087                     	;# 
   216  0088                     	;# 
   217  0089                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  008E                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0043                     _RD3	set	67
   238  0042                     _RD2	set	66
   239  0047                     _RD7	set	71
   240  0046                     _RD6	set	70
   241  0045                     _RD5	set	69
   242  0044                     _RD4	set	68
   243  009F                     _ADCON1	set	159
   244  0088                     _TRISD	set	136
   245  0443                     _TRISD3	set	1091
   246  0442                     _TRISD2	set	1090
   247                           
   248                           	psect	strings
   249  0003                     __pstrings:
   250  0003                     stringtab:
   251  0003                     __stringtab:
   252  0003                     stringcode:	
   253                           ;	String table - string pointers are 1 byte each
   254                           
   255  0003                     stringdir:
   256  0003  3000               	movlw	high stringdir
   257  0004  008A               	movwf	10
   258  0005  0804               	movf	4,w
   259  0006  0A84               	incf	4,f
   260  0007  0782               	addwf	2,f
   261  0008                     __stringbase:
   262  0008  3400               	retlw	0
   263  0009                     __end_of__stringtab:
   264  0009                     STR_1:
   265  0009  3444               	retlw	68	;'D'
   266  000A  3455               	retlw	85	;'U'
   267  000B  3443               	retlw	67	;'C'
   268  000C  3420               	retlw	32	;' '
   269  000D  3444               	retlw	68	;'D'
   270  000E  3441               	retlw	65	;'A'
   271  000F  3454               	retlw	84	;'T'
   272  0010  3400               	retlw	0
   273                           
   274                           	psect	cinit
   275  07FC                     start_initialization:	
   276                           ; #config settings
   277                           
   278  07FC                     __initialization:
   279  07FC                     end_of_initialization:	
   280                           ;End of C runtime variable initialization code
   281                           
   282  07FC                     __end_of__initialization:
   283  07FC  0183               	clrf	3
   284  07FD  120A  118A  2EC0   	ljmp	_main	;jump to C main() function
   285                           
   286                           	psect	cstackCOMMON
   287  0070                     __pcstackCOMMON:
   288  0070                     ?_LCD_DATA:
   289  0070                     ??_LCD_DATA:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_LCD_CMD:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ?_LCD_Clear:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_LCD_Init:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ?_LCD_Write_Char:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_LCD_Write_String:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_LCD_SL:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_LCD_SR:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_main:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?___lwdiv:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?___lwmod:	
   320                           ; 2 bytes @ 0x0
   321                           
   322  0070                     LCD_DATA@Data:	
   323                           ; 2 bytes @ 0x0
   324                           
   325  0070                     ___lwdiv@divisor:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ___lwmod@divisor:	
   329                           ; 2 bytes @ 0x0
   330                           
   331                           
   332                           ; 2 bytes @ 0x0
   333  0070                     	ds	1
   334  0071                     ??_LCD_CMD:
   335  0071                     ??_LCD_Write_Char:	
   336                           ; 1 bytes @ 0x1
   337                           
   338                           
   339                           ; 1 bytes @ 0x1
   340  0071                     	ds	1
   341  0072                     ___lwdiv@dividend:
   342  0072                     ___lwmod@dividend:	
   343                           ; 2 bytes @ 0x2
   344                           
   345                           
   346                           ; 2 bytes @ 0x2
   347  0072                     	ds	1
   348  0073                     LCD_CMD@CMD:
   349  0073                     LCD_Write_Char@Low4:	
   350                           ; 1 bytes @ 0x3
   351                           
   352                           
   353                           ; 1 bytes @ 0x3
   354  0073                     	ds	1
   355  0074                     ??_LCD_Clear:
   356  0074                     ?_LCD_Set_Cursor:	
   357                           ; 1 bytes @ 0x4
   358                           
   359  0074                     ??_LCD_Init:	
   360                           ; 1 bytes @ 0x4
   361                           
   362  0074                     ??_LCD_SL:	
   363                           ; 1 bytes @ 0x4
   364                           
   365  0074                     ??_LCD_SR:	
   366                           ; 1 bytes @ 0x4
   367                           
   368  0074                     ??___lwdiv:	
   369                           ; 1 bytes @ 0x4
   370                           
   371  0074                     ??___lwmod:	
   372                           ; 1 bytes @ 0x4
   373                           
   374  0074                     LCD_Set_Cursor@column:	
   375                           ; 1 bytes @ 0x4
   376                           
   377  0074                     LCD_Write_Char@High4:	
   378                           ; 1 bytes @ 0x4
   379                           
   380                           
   381                           ; 1 bytes @ 0x4
   382  0074                     	ds	1
   383  0075                     ??_LCD_Set_Cursor:
   384  0075                     LCD_Write_Char@Data:	
   385                           ; 1 bytes @ 0x5
   386                           
   387  0075                     ___lwmod@counter:	
   388                           ; 1 bytes @ 0x5
   389                           
   390  0075                     ___lwdiv@quotient:	
   391                           ; 1 bytes @ 0x5
   392                           
   393                           
   394                           ; 2 bytes @ 0x5
   395  0075                     	ds	1
   396  0076                     ??_LCD_Write_String:
   397  0076                     LCD_Write_String@i:	
   398                           ; 1 bytes @ 0x6
   399                           
   400                           
   401                           ; 2 bytes @ 0x6
   402  0076                     	ds	1
   403  0077                     LCD_Set_Cursor@row:
   404  0077                     ___lwdiv@counter:	
   405                           ; 1 bytes @ 0x7
   406                           
   407                           
   408                           ; 1 bytes @ 0x7
   409  0077                     	ds	1
   410  0078                     ?_LCD_Write_Number:
   411  0078                     LCD_Set_Cursor@Low4:	
   412                           ; 1 bytes @ 0x8
   413                           
   414  0078                     LCD_Write_String@str:	
   415                           ; 1 bytes @ 0x8
   416                           
   417  0078                     LCD_Write_Number@number:	
   418                           ; 1 bytes @ 0x8
   419                           
   420                           
   421                           ; 2 bytes @ 0x8
   422  0078                     	ds	1
   423  0079                     LCD_Set_Cursor@High4:
   424                           
   425                           ; 1 bytes @ 0x9
   426  0079                     	ds	1
   427  007A                     ??_LCD_Write_Number:
   428  007A                     LCD_Set_Cursor@Temp:	
   429                           ; 1 bytes @ 0xA
   430                           
   431                           
   432                           ; 1 bytes @ 0xA
   433  007A                     	ds	2
   434                           
   435                           	psect	cstackBANK0
   436  0020                     __pcstackBANK0:
   437  0020                     LCD_Write_Number@num:
   438                           
   439                           ; 20 bytes @ 0x0
   440  0020                     	ds	20
   441  0034                     LCD_Write_Number@k:
   442                           
   443                           ; 2 bytes @ 0x14
   444  0034                     	ds	2
   445  0036                     LCD_Write_Number@c:
   446                           
   447                           ; 1 bytes @ 0x16
   448  0036                     	ds	1
   449  0037                     LCD_Write_Number@p:
   450                           
   451                           ; 2 bytes @ 0x17
   452  0037                     	ds	2
   453  0039                     ??_main:
   454                           
   455                           ; 1 bytes @ 0x19
   456  0039                     	ds	3
   457  003C                     main@i:
   458                           
   459                           ; 2 bytes @ 0x1C
   460  003C                     	ds	2
   461  003E                     main@i_102:
   462                           
   463                           ; 2 bytes @ 0x1E
   464  003E                     	ds	2
   465                           
   466                           	psect	maintext
   467  06C0                     __pmaintext:	
   468 ;;
   469 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   470 ;;
   471 ;; *************** function _main *****************
   472 ;; Defined at:
   473 ;;		line 11 in file "main-lcd.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;  i               2   30[BANK0 ] int 
   478 ;;  i               2   28[BANK0 ] int 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : B00/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   488 ;;      Params:         0       0       0       0       0
   489 ;;      Locals:         0       4       0       0       0
   490 ;;      Temps:          0       3       0       0       0
   491 ;;      Totals:         0       7       0       0       0
   492 ;;Total ram usage:        7 bytes
   493 ;; Hardware stack levels required when called:    3
   494 ;; This function calls:
   495 ;;		_LCD_Clear
   496 ;;		_LCD_Init
   497 ;;		_LCD_SL
   498 ;;		_LCD_SR
   499 ;;		_LCD_Set_Cursor
   500 ;;		_LCD_Write_Number
   501 ;;		_LCD_Write_String
   502 ;; This function is called by:
   503 ;;		Startup code after reset
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _main
   509  06C0                     _main:
   510  06C0                     l1215:	
   511                           ;incstack = 0
   512                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   513                           
   514                           
   515                           ;main-lcd.c: 13:     ADCON1 = 0x06;
   516  06C0  3006               	movlw	6
   517  06C1  1683               	bsf	3,5	;RP0=1, select bank1
   518  06C2  1303               	bcf	3,6	;RP1=0, select bank1
   519  06C3  009F               	movwf	31	;volatile
   520  06C4                     l1217:
   521                           
   522                           ;main-lcd.c: 15:     LCD_Init();
   523  06C4  120A  118A  25D9  120A  118A  	fcall	_LCD_Init
   524  06C9                     l1219:
   525                           
   526                           ;main-lcd.c: 16:     LCD_Clear();
   527  06C9  120A  118A  2486  120A  118A  	fcall	_LCD_Clear
   528  06CE                     l1221:
   529                           
   530                           ;main-lcd.c: 17:     LCD_Set_Cursor(1,1);
   531  06CE  01F4               	clrf	LCD_Set_Cursor@column
   532  06CF  0AF4               	incf	LCD_Set_Cursor@column,f
   533  06D0  3001               	movlw	1
   534  06D1  120A  118A  2757  120A  118A  	fcall	_LCD_Set_Cursor
   535  06D6                     l1223:
   536                           
   537                           ;main-lcd.c: 18:     LCD_Write_String("DUC DAT");
   538  06D6  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   539  06D7  120A  118A  24E3  120A  118A  	fcall	_LCD_Write_String
   540  06DC                     l1225:
   541                           
   542                           ;main-lcd.c: 19:     LCD_Set_Cursor(2,1);
   543  06DC  01F4               	clrf	LCD_Set_Cursor@column
   544  06DD  0AF4               	incf	LCD_Set_Cursor@column,f
   545  06DE  3002               	movlw	2
   546  06DF  120A  118A  2757  120A  118A  	fcall	_LCD_Set_Cursor
   547  06E4                     l1227:
   548                           
   549                           ;main-lcd.c: 20:     LCD_Write_Number(3007);
   550  06E4  30BF               	movlw	191
   551  06E5  00F8               	movwf	LCD_Write_Number@number
   552  06E6  300B               	movlw	11
   553  06E7  00F9               	movwf	LCD_Write_Number@number+1
   554  06E8  120A  118A  2640  120A  118A  	fcall	_LCD_Write_Number
   555                           
   556                           ;main-lcd.c: 21:     _delay((unsigned long)((2000)*(20000000/4000.0)));
   557  06ED  3033               	movlw	51
   558  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   559  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   560  06F0  00BB               	movwf	??_main+2
   561  06F1  30BB               	movlw	187
   562  06F2  00BA               	movwf	??_main+1
   563  06F3  30DF               	movlw	223
   564  06F4  00B9               	movwf	??_main
   565  06F5                     u697:
   566  06F5  0BB9               	decfsz	??_main,f
   567  06F6  2EF5               	goto	u697
   568  06F7  0BBA               	decfsz	??_main+1,f
   569  06F8  2EF5               	goto	u697
   570  06F9  0BBB               	decfsz	??_main+2,f
   571  06FA  2EF5               	goto	u697
   572  06FB                     l1229:
   573                           
   574                           ;main-lcd.c: 24:     {;main-lcd.c: 25:         for(int i=0; i<4; i++)
   575  06FB  1283               	bcf	3,5	;RP0=0, select bank0
   576  06FC  1303               	bcf	3,6	;RP1=0, select bank0
   577  06FD  01BC               	clrf	main@i
   578  06FE  01BD               	clrf	main@i+1
   579  06FF                     l1235:
   580                           
   581                           ;main-lcd.c: 26:         {;main-lcd.c: 27:           _delay((unsigned long)((300)*(20000
      +                          000/4000.0)));
   582  06FF  3008               	movlw	8
   583  0700  1283               	bcf	3,5	;RP0=0, select bank0
   584  0701  1303               	bcf	3,6	;RP1=0, select bank0
   585  0702  00BB               	movwf	??_main+2
   586  0703  309D               	movlw	157
   587  0704  00BA               	movwf	??_main+1
   588  0705  3005               	movlw	5
   589  0706  00B9               	movwf	??_main
   590  0707                     u707:
   591  0707  0BB9               	decfsz	??_main,f
   592  0708  2F07               	goto	u707
   593  0709  0BBA               	decfsz	??_main+1,f
   594  070A  2F07               	goto	u707
   595  070B  0BBB               	decfsz	??_main+2,f
   596  070C  2F07               	goto	u707
   597  070D                     l1237:
   598                           
   599                           ;main-lcd.c: 28:           LCD_SR();
   600  070D  120A  118A  2479  120A  118A  	fcall	_LCD_SR
   601  0712                     l1239:
   602                           
   603                           ;main-lcd.c: 29:         }
   604  0712  3001               	movlw	1
   605  0713  1283               	bcf	3,5	;RP0=0, select bank0
   606  0714  1303               	bcf	3,6	;RP1=0, select bank0
   607  0715  07BC               	addwf	main@i,f
   608  0716  1803               	skipnc
   609  0717  0ABD               	incf	main@i+1,f
   610  0718  3000               	movlw	0
   611  0719  07BD               	addwf	main@i+1,f
   612  071A                     l1241:
   613  071A  083D               	movf	main@i+1,w
   614  071B  3A80               	xorlw	128
   615  071C  00FF               	movwf	btemp+1
   616  071D  3080               	movlw	128
   617  071E  027F               	subwf	btemp+1,w
   618  071F  1D03               	skipz
   619  0720  2F23               	goto	u675
   620  0721  3004               	movlw	4
   621  0722  023C               	subwf	main@i,w
   622  0723                     u675:
   623  0723  1C03               	skipc
   624  0724  2F26               	goto	u671
   625  0725  2F27               	goto	u670
   626  0726                     u671:
   627  0726  2EFF               	goto	l1235
   628  0727                     u670:
   629  0727                     l1243:
   630                           
   631                           ;main-lcd.c: 30:         for(int i=0; i<4; i++)
   632  0727  1283               	bcf	3,5	;RP0=0, select bank0
   633  0728  1303               	bcf	3,6	;RP1=0, select bank0
   634  0729  01BE               	clrf	main@i_102
   635  072A  01BF               	clrf	main@i_102+1
   636  072B                     l1249:
   637                           
   638                           ;main-lcd.c: 31:         {;main-lcd.c: 32:           _delay((unsigned long)((300)*(20000
      +                          000/4000.0)));
   639  072B  3008               	movlw	8
   640  072C  1283               	bcf	3,5	;RP0=0, select bank0
   641  072D  1303               	bcf	3,6	;RP1=0, select bank0
   642  072E  00BB               	movwf	??_main+2
   643  072F  309D               	movlw	157
   644  0730  00BA               	movwf	??_main+1
   645  0731  3005               	movlw	5
   646  0732  00B9               	movwf	??_main
   647  0733                     u717:
   648  0733  0BB9               	decfsz	??_main,f
   649  0734  2F33               	goto	u717
   650  0735  0BBA               	decfsz	??_main+1,f
   651  0736  2F33               	goto	u717
   652  0737  0BBB               	decfsz	??_main+2,f
   653  0738  2F33               	goto	u717
   654  0739                     l1251:
   655                           
   656                           ;main-lcd.c: 33:           LCD_SL();
   657  0739  120A  118A  246C  120A  118A  	fcall	_LCD_SL
   658  073E                     l1253:
   659                           
   660                           ;main-lcd.c: 34:         }
   661  073E  3001               	movlw	1
   662  073F  1283               	bcf	3,5	;RP0=0, select bank0
   663  0740  1303               	bcf	3,6	;RP1=0, select bank0
   664  0741  07BE               	addwf	main@i_102,f
   665  0742  1803               	skipnc
   666  0743  0ABF               	incf	main@i_102+1,f
   667  0744  3000               	movlw	0
   668  0745  07BF               	addwf	main@i_102+1,f
   669  0746                     l1255:
   670  0746  083F               	movf	main@i_102+1,w
   671  0747  3A80               	xorlw	128
   672  0748  00FF               	movwf	btemp+1
   673  0749  3080               	movlw	128
   674  074A  027F               	subwf	btemp+1,w
   675  074B  1D03               	skipz
   676  074C  2F4F               	goto	u685
   677  074D  3004               	movlw	4
   678  074E  023E               	subwf	main@i_102,w
   679  074F                     u685:
   680  074F  1C03               	skipc
   681  0750  2F52               	goto	u681
   682  0751  2F53               	goto	u680
   683  0752                     u681:
   684  0752  2F2B               	goto	l1249
   685  0753                     u680:
   686  0753  2EFB               	goto	l1229
   687  0754  120A  118A  2800   	ljmp	start
   688  0757                     __end_of_main:
   689                           
   690                           	psect	text1
   691  04E3                     __ptext1:	
   692 ;; *************** function _LCD_Write_String *****************
   693 ;; Defined at:
   694 ;;		line 166 in file "lcd/lcd.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;  str             1    wreg     PTR unsigned char 
   697 ;;		 -> STR_1(8), 
   698 ;; Auto vars:     Size  Location     Type
   699 ;;  str             1    8[COMMON] PTR unsigned char 
   700 ;;		 -> STR_1(8), 
   701 ;;  i               2    6[COMMON] int 
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   711 ;;      Params:         0       0       0       0       0
   712 ;;      Locals:         3       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0
   714 ;;      Totals:         3       0       0       0       0
   715 ;;Total ram usage:        3 bytes
   716 ;; Hardware stack levels used:    1
   717 ;; Hardware stack levels required when called:    2
   718 ;; This function calls:
   719 ;;		_LCD_Write_Char
   720 ;; This function is called by:
   721 ;;		_main
   722 ;;		_LCD_Write_StringXY
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           
   727                           ;psect for function _LCD_Write_String
   728  04E3                     _LCD_Write_String:
   729                           
   730                           ;incstack = 0
   731                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   732                           ;LCD_Write_String@str stored from wreg
   733  04E3  00F8               	movwf	LCD_Write_String@str
   734  04E4                     l1159:
   735                           
   736                           ;lcd/lcd.c: 166: void LCD_Write_String(char *str);lcd/lcd.c: 167: {;lcd/lcd.c: 168:   in
      +                          t i;;lcd/lcd.c: 169:   for( i=0; str[i]!='\0'; i++)
   737  04E4  01F6               	clrf	LCD_Write_String@i
   738  04E5  01F7               	clrf	LCD_Write_String@i+1
   739  04E6  2CFA               	goto	l1165
   740  04E7                     l1161:
   741                           
   742                           ;lcd/lcd.c: 170:     LCD_Write_Char( str[i] );
   743  04E7  0876               	movf	LCD_Write_String@i,w
   744  04E8  0778               	addwf	LCD_Write_String@str,w
   745  04E9  0084               	movwf	4
   746  04EA  120A  118A  2003  120A  118A  	fcall	stringdir
   747  04EF  120A  118A  2586  120A  118A  	fcall	_LCD_Write_Char
   748  04F4                     l1163:
   749  04F4  3001               	movlw	1
   750  04F5  07F6               	addwf	LCD_Write_String@i,f
   751  04F6  1803               	skipnc
   752  04F7  0AF7               	incf	LCD_Write_String@i+1,f
   753  04F8  3000               	movlw	0
   754  04F9  07F7               	addwf	LCD_Write_String@i+1,f
   755  04FA                     l1165:
   756  04FA  0876               	movf	LCD_Write_String@i,w
   757  04FB  0778               	addwf	LCD_Write_String@str,w
   758  04FC  0084               	movwf	4
   759  04FD  120A  118A  2003  120A  118A  	fcall	stringdir
   760  0502  3A00               	xorlw	0
   761  0503  1D03               	skipz
   762  0504  2D06               	goto	u621
   763  0505  2D07               	goto	u620
   764  0506                     u621:
   765  0506  2CE7               	goto	l1161
   766  0507                     u620:
   767  0507                     l61:
   768  0507  0008               	return
   769  0508                     __end_of_LCD_Write_String:
   770                           
   771                           	psect	text2
   772  0640                     __ptext2:	
   773 ;; *************** function _LCD_Write_Number *****************
   774 ;; Defined at:
   775 ;;		line 195 in file "lcd/lcd.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  number          2    8[COMMON] unsigned int 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  num            20    0[BANK0 ] unsigned int [10]
   780 ;;  p               2   23[BANK0 ] int 
   781 ;;  k               2   20[BANK0 ] int 
   782 ;;  c               1   22[BANK0 ] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   792 ;;      Params:         2       0       0       0       0
   793 ;;      Locals:         0      25       0       0       0
   794 ;;      Temps:          2       0       0       0       0
   795 ;;      Totals:         4      25       0       0       0
   796 ;;Total ram usage:       29 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; Hardware stack levels required when called:    2
   799 ;; This function calls:
   800 ;;		_LCD_Write_Char
   801 ;;		___lwdiv
   802 ;;		___lwmod
   803 ;; This function is called by:
   804 ;;		_main
   805 ;;		_LCD_Write_NumberXY
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           
   810                           ;psect for function _LCD_Write_Number
   811  0640                     _LCD_Write_Number:
   812  0640                     l1171:	
   813                           ;incstack = 0
   814                           ; Regs used in _LCD_Write_Number: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   815                           
   816                           
   817                           ;lcd/lcd.c: 195: void LCD_Write_Number(unsigned int number);lcd/lcd.c: 196: {;lcd/lcd.c:
      +                           197:     unsigned int num[10];;lcd/lcd.c: 198:     char c;;lcd/lcd.c: 199:     int p, k
      +                          =0;
   818  0640  1283               	bcf	3,5	;RP0=0, select bank0
   819  0641  1303               	bcf	3,6	;RP1=0, select bank0
   820  0642  01B4               	clrf	LCD_Write_Number@k
   821  0643  01B5               	clrf	LCD_Write_Number@k+1
   822  0644                     l1173:
   823                           
   824                           ;lcd/lcd.c: 201:     if(number == 0)
   825  0644  0878               	movf	LCD_Write_Number@number,w
   826  0645  0479               	iorwf	LCD_Write_Number@number+1,w
   827  0646  1D03               	btfss	3,2
   828  0647  2E49               	goto	u631
   829  0648  2E4A               	goto	u630
   830  0649                     u631:
   831  0649  2E56               	goto	l1179
   832  064A                     u630:
   833  064A                     l1175:
   834                           
   835                           ;lcd/lcd.c: 202:     {;lcd/lcd.c: 203:      c = (char)( number + '0' );
   836  064A  0878               	movf	LCD_Write_Number@number,w
   837  064B  3E30               	addlw	48
   838  064C  00FA               	movwf	??_LCD_Write_Number
   839  064D  087A               	movf	??_LCD_Write_Number,w
   840  064E  00B6               	movwf	LCD_Write_Number@c
   841  064F                     l1177:
   842                           
   843                           ;lcd/lcd.c: 204:      LCD_Write_Char(c);
   844  064F  0836               	movf	LCD_Write_Number@c,w
   845  0650  120A  118A  2586  120A  118A  	fcall	_LCD_Write_Char
   846                           
   847                           ;lcd/lcd.c: 205:  }
   848  0655  2EBF               	goto	l78
   849  0656                     l1179:
   850  0656  0878               	movf	LCD_Write_Number@number,w
   851  0657  0479               	iorwf	LCD_Write_Number@number+1,w
   852  0658  1903               	btfsc	3,2
   853  0659  2E5B               	goto	u641
   854  065A  2E5C               	goto	u640
   855  065B                     u641:
   856  065B  2EBF               	goto	l78
   857  065C                     u640:
   858  065C  2E90               	goto	l1189
   859  065D                     l1183:
   860                           
   861                           ;lcd/lcd.c: 209:      {;lcd/lcd.c: 210:          num[k] = number%10;
   862  065D  300A               	movlw	10
   863  065E  00F0               	movwf	___lwmod@divisor
   864  065F  3000               	movlw	0
   865  0660  00F1               	movwf	___lwmod@divisor+1
   866  0661  0879               	movf	LCD_Write_Number@number+1,w
   867  0662  00F3               	movwf	___lwmod@dividend+1
   868  0663  0878               	movf	LCD_Write_Number@number,w
   869  0664  00F2               	movwf	___lwmod@dividend
   870  0665  120A  118A  2508  120A  118A  	fcall	___lwmod
   871  066A  1283               	bcf	3,5	;RP0=0, select bank0
   872  066B  1303               	bcf	3,6	;RP1=0, select bank0
   873  066C  0834               	movf	LCD_Write_Number@k,w
   874  066D  00FA               	movwf	??_LCD_Write_Number
   875  066E  077A               	addwf	??_LCD_Write_Number,w
   876  066F  3E20               	addlw	(low (LCD_Write_Number@num| 0))& (0+255)
   877  0670  0084               	movwf	4
   878  0671  0870               	movf	?___lwmod,w
   879  0672  1383               	bcf	3,7	;select IRP bank0
   880  0673  0080               	movwf	0
   881  0674  0A84               	incf	4,f
   882  0675  0871               	movf	?___lwmod+1,w
   883  0676  0080               	movwf	0
   884  0677                     l1185:
   885                           
   886                           ;lcd/lcd.c: 211:          number = number/10;
   887  0677  300A               	movlw	10
   888  0678  00F0               	movwf	___lwdiv@divisor
   889  0679  3000               	movlw	0
   890  067A  00F1               	movwf	___lwdiv@divisor+1
   891  067B  0879               	movf	LCD_Write_Number@number+1,w
   892  067C  00F3               	movwf	___lwdiv@dividend+1
   893  067D  0878               	movf	LCD_Write_Number@number,w
   894  067E  00F2               	movwf	___lwdiv@dividend
   895  067F  120A  118A  2542  120A  118A  	fcall	___lwdiv
   896  0684  0871               	movf	?___lwdiv+1,w
   897  0685  00F9               	movwf	LCD_Write_Number@number+1
   898  0686  0870               	movf	?___lwdiv,w
   899  0687  00F8               	movwf	LCD_Write_Number@number
   900  0688                     l1187:
   901                           
   902                           ;lcd/lcd.c: 212:          k++;
   903  0688  3001               	movlw	1
   904  0689  1283               	bcf	3,5	;RP0=0, select bank0
   905  068A  1303               	bcf	3,6	;RP1=0, select bank0
   906  068B  07B4               	addwf	LCD_Write_Number@k,f
   907  068C  1803               	skipnc
   908  068D  0AB5               	incf	LCD_Write_Number@k+1,f
   909  068E  3000               	movlw	0
   910  068F  07B5               	addwf	LCD_Write_Number@k+1,f
   911  0690                     l1189:
   912                           
   913                           ;lcd/lcd.c: 208:      while(number>0)
   914  0690  0878               	movf	LCD_Write_Number@number,w
   915  0691  0479               	iorwf	LCD_Write_Number@number+1,w
   916  0692  1D03               	btfss	3,2
   917  0693  2E95               	goto	u651
   918  0694  2E96               	goto	u650
   919  0695                     u651:
   920  0695  2E5D               	goto	l1183
   921  0696                     u650:
   922  0696                     l1191:
   923                           
   924                           ;lcd/lcd.c: 215:      k--;
   925  0696  30FF               	movlw	255
   926  0697  07B4               	addwf	LCD_Write_Number@k,f
   927  0698  1803               	skipnc
   928  0699  0AB5               	incf	LCD_Write_Number@k+1,f
   929  069A  30FF               	movlw	255
   930  069B  07B5               	addwf	LCD_Write_Number@k+1,f
   931                           
   932                           ;lcd/lcd.c: 216:      for(p=k; p>=0; p--)
   933  069C  0835               	movf	LCD_Write_Number@k+1,w
   934  069D  00B8               	movwf	LCD_Write_Number@p+1
   935  069E  0834               	movf	LCD_Write_Number@k,w
   936  069F  00B7               	movwf	LCD_Write_Number@p
   937  06A0                     l1193:
   938  06A0  1FB8               	btfss	LCD_Write_Number@p+1,7
   939  06A1  2EA3               	goto	u661
   940  06A2  2EA4               	goto	u660
   941  06A3                     u661:
   942  06A3  2EA5               	goto	l1197
   943  06A4                     u660:
   944  06A4  2EBF               	goto	l78
   945  06A5                     l1197:
   946                           
   947                           ;lcd/lcd.c: 217:      {;lcd/lcd.c: 218:          c = (char)(num[p] + '0');
   948  06A5  0837               	movf	LCD_Write_Number@p,w
   949  06A6  00FA               	movwf	??_LCD_Write_Number
   950  06A7  077A               	addwf	??_LCD_Write_Number,w
   951  06A8  3E20               	addlw	(low (LCD_Write_Number@num| 0))& (0+255)
   952  06A9  0084               	movwf	4
   953  06AA  1383               	bcf	3,7	;select IRP bank0
   954  06AB  0800               	movf	0,w
   955  06AC  3E30               	addlw	48
   956  06AD  00FB               	movwf	??_LCD_Write_Number+1
   957  06AE  087B               	movf	??_LCD_Write_Number+1,w
   958  06AF  00B6               	movwf	LCD_Write_Number@c
   959  06B0                     l1199:
   960                           
   961                           ;lcd/lcd.c: 219:          LCD_Write_Char(c);
   962  06B0  0836               	movf	LCD_Write_Number@c,w
   963  06B1  120A  118A  2586  120A  118A  	fcall	_LCD_Write_Char
   964  06B6                     l1201:
   965                           
   966                           ;lcd/lcd.c: 220:      }
   967  06B6  30FF               	movlw	255
   968  06B7  1283               	bcf	3,5	;RP0=0, select bank0
   969  06B8  1303               	bcf	3,6	;RP1=0, select bank0
   970  06B9  07B7               	addwf	LCD_Write_Number@p,f
   971  06BA  1803               	skipnc
   972  06BB  0AB8               	incf	LCD_Write_Number@p+1,f
   973  06BC  30FF               	movlw	255
   974  06BD  07B8               	addwf	LCD_Write_Number@p+1,f
   975  06BE  2EA0               	goto	l1193
   976  06BF                     l78:
   977  06BF  0008               	return
   978  06C0                     __end_of_LCD_Write_Number:
   979                           
   980                           	psect	text3
   981  0508                     __ptext3:	
   982 ;; *************** function ___lwmod *****************
   983 ;; Defined at:
   984 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  divisor         2    0[COMMON] unsigned int 
   987 ;;  dividend        2    2[COMMON] unsigned int 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  counter         1    5[COMMON] unsigned char 
   990 ;; Return value:  Size  Location     Type
   991 ;;                  2    0[COMMON] unsigned int 
   992 ;; Registers used:
   993 ;;		wreg, status,2, status,0
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   999 ;;      Params:         4       0       0       0       0
  1000 ;;      Locals:         1       0       0       0       0
  1001 ;;      Temps:          1       0       0       0       0
  1002 ;;      Totals:         6       0       0       0       0
  1003 ;;Total ram usage:        6 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; This function calls:
  1006 ;;		Nothing
  1007 ;; This function is called by:
  1008 ;;		_LCD_Write_Number
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           
  1013                           ;psect for function ___lwmod
  1014  0508                     ___lwmod:
  1015  0508                     l1057:	
  1016                           ;incstack = 0
  1017                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1018                           
  1019  0508  0870               	movf	___lwmod@divisor,w
  1020  0509  0471               	iorwf	___lwmod@divisor+1,w
  1021  050A  1903               	btfsc	3,2
  1022  050B  2D0D               	goto	u481
  1023  050C  2D0E               	goto	u480
  1024  050D                     u481:
  1025  050D  2D3D               	goto	l1075
  1026  050E                     u480:
  1027  050E                     l1059:
  1028  050E  01F5               	clrf	___lwmod@counter
  1029  050F  0AF5               	incf	___lwmod@counter,f
  1030  0510  2D1C               	goto	l1065
  1031  0511                     l1061:
  1032  0511  3001               	movlw	1
  1033  0512                     u495:
  1034  0512  1003               	clrc
  1035  0513  0DF0               	rlf	___lwmod@divisor,f
  1036  0514  0DF1               	rlf	___lwmod@divisor+1,f
  1037  0515  3EFF               	addlw	-1
  1038  0516  1D03               	skipz
  1039  0517  2D12               	goto	u495
  1040  0518                     l1063:
  1041  0518  3001               	movlw	1
  1042  0519  00F4               	movwf	??___lwmod
  1043  051A  0874               	movf	??___lwmod,w
  1044  051B  07F5               	addwf	___lwmod@counter,f
  1045  051C                     l1065:
  1046  051C  1FF1               	btfss	___lwmod@divisor+1,7
  1047  051D  2D1F               	goto	u501
  1048  051E  2D20               	goto	u500
  1049  051F                     u501:
  1050  051F  2D11               	goto	l1061
  1051  0520                     u500:
  1052  0520                     l1067:
  1053  0520  0871               	movf	___lwmod@divisor+1,w
  1054  0521  0273               	subwf	___lwmod@dividend+1,w
  1055  0522  1D03               	skipz
  1056  0523  2D26               	goto	u515
  1057  0524  0870               	movf	___lwmod@divisor,w
  1058  0525  0272               	subwf	___lwmod@dividend,w
  1059  0526                     u515:
  1060  0526  1C03               	skipc
  1061  0527  2D29               	goto	u511
  1062  0528  2D2A               	goto	u510
  1063  0529                     u511:
  1064  0529  2D30               	goto	l1071
  1065  052A                     u510:
  1066  052A                     l1069:
  1067  052A  0870               	movf	___lwmod@divisor,w
  1068  052B  02F2               	subwf	___lwmod@dividend,f
  1069  052C  0871               	movf	___lwmod@divisor+1,w
  1070  052D  1C03               	skipc
  1071  052E  03F3               	decf	___lwmod@dividend+1,f
  1072  052F  02F3               	subwf	___lwmod@dividend+1,f
  1073  0530                     l1071:
  1074  0530  3001               	movlw	1
  1075  0531                     u525:
  1076  0531  1003               	clrc
  1077  0532  0CF1               	rrf	___lwmod@divisor+1,f
  1078  0533  0CF0               	rrf	___lwmod@divisor,f
  1079  0534  3EFF               	addlw	-1
  1080  0535  1D03               	skipz
  1081  0536  2D31               	goto	u525
  1082  0537                     l1073:
  1083  0537  3001               	movlw	1
  1084  0538  02F5               	subwf	___lwmod@counter,f
  1085  0539  1D03               	btfss	3,2
  1086  053A  2D3C               	goto	u531
  1087  053B  2D3D               	goto	u530
  1088  053C                     u531:
  1089  053C  2D20               	goto	l1067
  1090  053D                     u530:
  1091  053D                     l1075:
  1092  053D  0873               	movf	___lwmod@dividend+1,w
  1093  053E  00F1               	movwf	?___lwmod+1
  1094  053F  0872               	movf	___lwmod@dividend,w
  1095  0540  00F0               	movwf	?___lwmod
  1096  0541                     l485:
  1097  0541  0008               	return
  1098  0542                     __end_of___lwmod:
  1099                           
  1100                           	psect	text4
  1101  0542                     __ptext4:	
  1102 ;; *************** function ___lwdiv *****************
  1103 ;; Defined at:
  1104 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  divisor         2    0[COMMON] unsigned int 
  1107 ;;  dividend        2    2[COMMON] unsigned int 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  quotient        2    5[COMMON] unsigned int 
  1110 ;;  counter         1    7[COMMON] unsigned char 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  2    0[COMMON] unsigned int 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1120 ;;      Params:         4       0       0       0       0
  1121 ;;      Locals:         3       0       0       0       0
  1122 ;;      Temps:          1       0       0       0       0
  1123 ;;      Totals:         8       0       0       0       0
  1124 ;;Total ram usage:        8 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_LCD_Write_Number
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           
  1134                           ;psect for function ___lwdiv
  1135  0542                     ___lwdiv:
  1136  0542                     l1031:	
  1137                           ;incstack = 0
  1138                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1139                           
  1140  0542  01F5               	clrf	___lwdiv@quotient
  1141  0543  01F6               	clrf	___lwdiv@quotient+1
  1142  0544                     l1033:
  1143  0544  0870               	movf	___lwdiv@divisor,w
  1144  0545  0471               	iorwf	___lwdiv@divisor+1,w
  1145  0546  1903               	btfsc	3,2
  1146  0547  2D49               	goto	u411
  1147  0548  2D4A               	goto	u410
  1148  0549                     u411:
  1149  0549  2D81               	goto	l1053
  1150  054A                     u410:
  1151  054A                     l1035:
  1152  054A  01F7               	clrf	___lwdiv@counter
  1153  054B  0AF7               	incf	___lwdiv@counter,f
  1154  054C  2D58               	goto	l1041
  1155  054D                     l1037:
  1156  054D  3001               	movlw	1
  1157  054E                     u425:
  1158  054E  1003               	clrc
  1159  054F  0DF0               	rlf	___lwdiv@divisor,f
  1160  0550  0DF1               	rlf	___lwdiv@divisor+1,f
  1161  0551  3EFF               	addlw	-1
  1162  0552  1D03               	skipz
  1163  0553  2D4E               	goto	u425
  1164  0554                     l1039:
  1165  0554  3001               	movlw	1
  1166  0555  00F4               	movwf	??___lwdiv
  1167  0556  0874               	movf	??___lwdiv,w
  1168  0557  07F7               	addwf	___lwdiv@counter,f
  1169  0558                     l1041:
  1170  0558  1FF1               	btfss	___lwdiv@divisor+1,7
  1171  0559  2D5B               	goto	u431
  1172  055A  2D5C               	goto	u430
  1173  055B                     u431:
  1174  055B  2D4D               	goto	l1037
  1175  055C                     u430:
  1176  055C                     l1043:
  1177  055C  3001               	movlw	1
  1178  055D                     u445:
  1179  055D  1003               	clrc
  1180  055E  0DF5               	rlf	___lwdiv@quotient,f
  1181  055F  0DF6               	rlf	___lwdiv@quotient+1,f
  1182  0560  3EFF               	addlw	-1
  1183  0561  1D03               	skipz
  1184  0562  2D5D               	goto	u445
  1185  0563  0871               	movf	___lwdiv@divisor+1,w
  1186  0564  0273               	subwf	___lwdiv@dividend+1,w
  1187  0565  1D03               	skipz
  1188  0566  2D69               	goto	u455
  1189  0567  0870               	movf	___lwdiv@divisor,w
  1190  0568  0272               	subwf	___lwdiv@dividend,w
  1191  0569                     u455:
  1192  0569  1C03               	skipc
  1193  056A  2D6C               	goto	u451
  1194  056B  2D6D               	goto	u450
  1195  056C                     u451:
  1196  056C  2D74               	goto	l1049
  1197  056D                     u450:
  1198  056D                     l1045:
  1199  056D  0870               	movf	___lwdiv@divisor,w
  1200  056E  02F2               	subwf	___lwdiv@dividend,f
  1201  056F  0871               	movf	___lwdiv@divisor+1,w
  1202  0570  1C03               	skipc
  1203  0571  03F3               	decf	___lwdiv@dividend+1,f
  1204  0572  02F3               	subwf	___lwdiv@dividend+1,f
  1205  0573                     l1047:
  1206  0573  1475               	bsf	___lwdiv@quotient,0
  1207  0574                     l1049:
  1208  0574  3001               	movlw	1
  1209  0575                     u465:
  1210  0575  1003               	clrc
  1211  0576  0CF1               	rrf	___lwdiv@divisor+1,f
  1212  0577  0CF0               	rrf	___lwdiv@divisor,f
  1213  0578  3EFF               	addlw	-1
  1214  0579  1D03               	skipz
  1215  057A  2D75               	goto	u465
  1216  057B                     l1051:
  1217  057B  3001               	movlw	1
  1218  057C  02F7               	subwf	___lwdiv@counter,f
  1219  057D  1D03               	btfss	3,2
  1220  057E  2D80               	goto	u471
  1221  057F  2D81               	goto	u470
  1222  0580                     u471:
  1223  0580  2D5C               	goto	l1043
  1224  0581                     u470:
  1225  0581                     l1053:
  1226  0581  0876               	movf	___lwdiv@quotient+1,w
  1227  0582  00F1               	movwf	?___lwdiv+1
  1228  0583  0875               	movf	___lwdiv@quotient,w
  1229  0584  00F0               	movwf	?___lwdiv
  1230  0585                     l475:
  1231  0585  0008               	return
  1232  0586                     __end_of___lwdiv:
  1233                           
  1234                           	psect	text5
  1235  0586                     __ptext5:	
  1236 ;; *************** function _LCD_Write_Char *****************
  1237 ;; Defined at:
  1238 ;;		line 143 in file "lcd/lcd.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  Data            1    wreg     unsigned char 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  Data            1    5[COMMON] unsigned char 
  1243 ;;  High4           1    4[COMMON] unsigned char 
  1244 ;;  Low4            1    3[COMMON] unsigned char 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, status,2, status,0, pclath, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1254 ;;      Params:         0       0       0       0       0
  1255 ;;      Locals:         3       0       0       0       0
  1256 ;;      Temps:          2       0       0       0       0
  1257 ;;      Totals:         5       0       0       0       0
  1258 ;;Total ram usage:        5 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; Hardware stack levels required when called:    1
  1261 ;; This function calls:
  1262 ;;		_LCD_DATA
  1263 ;; This function is called by:
  1264 ;;		_LCD_Write_String
  1265 ;;		_LCD_Write_Number
  1266 ;;		_LCD_Write_CharXY
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           
  1271                           ;psect for function _LCD_Write_Char
  1272  0586                     _LCD_Write_Char:
  1273                           
  1274                           ;incstack = 0
  1275                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1276                           ;LCD_Write_Char@Data stored from wreg
  1277  0586  00F5               	movwf	LCD_Write_Char@Data
  1278  0587                     l1007:
  1279                           
  1280                           ;lcd/lcd.c: 143: void LCD_Write_Char(char Data);lcd/lcd.c: 144: {;lcd/lcd.c: 145:   char
      +                           Low4,High4;;lcd/lcd.c: 147:   Low4 = Data & 0x0F;
  1281  0587  0875               	movf	LCD_Write_Char@Data,w
  1282  0588  390F               	andlw	15
  1283  0589  00F1               	movwf	??_LCD_Write_Char
  1284  058A  0871               	movf	??_LCD_Write_Char,w
  1285  058B  00F3               	movwf	LCD_Write_Char@Low4
  1286                           
  1287                           ;lcd/lcd.c: 148:   High4 = Data & 0xF0;
  1288  058C  0875               	movf	LCD_Write_Char@Data,w
  1289  058D  39F0               	andlw	240
  1290  058E  00F1               	movwf	??_LCD_Write_Char
  1291  058F  0871               	movf	??_LCD_Write_Char,w
  1292  0590  00F4               	movwf	LCD_Write_Char@High4
  1293  0591                     l1009:
  1294                           
  1295                           ;lcd/lcd.c: 149:   RD2 = 1;
  1296  0591  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0592  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0593  1508               	bsf	8,2	;volatile
  1299  0594                     l1011:
  1300                           
  1301                           ;lcd/lcd.c: 150:   LCD_DATA(High4>>4);
  1302  0594  0874               	movf	LCD_Write_Char@High4,w
  1303  0595  00F1               	movwf	??_LCD_Write_Char
  1304  0596  3004               	movlw	4
  1305  0597                     u405:
  1306  0597  1003               	clrc
  1307  0598  0CF1               	rrf	??_LCD_Write_Char,f
  1308  0599  3EFF               	addlw	-1
  1309  059A  1D03               	skipz
  1310  059B  2D97               	goto	u405
  1311  059C  0871               	movf	??_LCD_Write_Char,w
  1312  059D  120A  118A  249C  120A  118A  	fcall	_LCD_DATA
  1313  05A2                     l1013:
  1314                           
  1315                           ;lcd/lcd.c: 151:   RD3 = 1;
  1316  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  1317  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  1318  05A4  1588               	bsf	8,3	;volatile
  1319  05A5                     l1015:
  1320                           
  1321                           ;lcd/lcd.c: 152:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  1322  05A5  3004               	movlw	4
  1323  05A6  00F2               	movwf	??_LCD_Write_Char+1
  1324  05A7  303D               	movlw	61
  1325  05A8  00F1               	movwf	??_LCD_Write_Char
  1326  05A9                     u727:
  1327  05A9  0BF1               	decfsz	??_LCD_Write_Char,f
  1328  05AA  2DA9               	goto	u727
  1329  05AB  0BF2               	decfsz	??_LCD_Write_Char+1,f
  1330  05AC  2DA9               	goto	u727
  1331  05AD  2DAE               	nop2
  1332  05AE                     l1017:
  1333                           
  1334                           ;lcd/lcd.c: 153:   RD3 = 0;
  1335  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1336  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1337  05B0  1188               	bcf	8,3	;volatile
  1338  05B1                     l1019:
  1339                           
  1340                           ;lcd/lcd.c: 154:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  1341  05B1  3004               	movlw	4
  1342  05B2  00F2               	movwf	??_LCD_Write_Char+1
  1343  05B3  303D               	movlw	61
  1344  05B4  00F1               	movwf	??_LCD_Write_Char
  1345  05B5                     u737:
  1346  05B5  0BF1               	decfsz	??_LCD_Write_Char,f
  1347  05B6  2DB5               	goto	u737
  1348  05B7  0BF2               	decfsz	??_LCD_Write_Char+1,f
  1349  05B8  2DB5               	goto	u737
  1350  05B9  2DBA               	nop2
  1351  05BA                     l1021:
  1352                           
  1353                           ;lcd/lcd.c: 155:   LCD_DATA(Low4);
  1354  05BA  0873               	movf	LCD_Write_Char@Low4,w
  1355  05BB  120A  118A  249C  120A  118A  	fcall	_LCD_DATA
  1356  05C0                     l1023:
  1357                           
  1358                           ;lcd/lcd.c: 156:   RD3 = 1;
  1359  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  1360  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  1361  05C2  1588               	bsf	8,3	;volatile
  1362  05C3                     l1025:
  1363                           
  1364                           ;lcd/lcd.c: 157:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  1365  05C3  3004               	movlw	4
  1366  05C4  00F2               	movwf	??_LCD_Write_Char+1
  1367  05C5  303D               	movlw	61
  1368  05C6  00F1               	movwf	??_LCD_Write_Char
  1369  05C7                     u747:
  1370  05C7  0BF1               	decfsz	??_LCD_Write_Char,f
  1371  05C8  2DC7               	goto	u747
  1372  05C9  0BF2               	decfsz	??_LCD_Write_Char+1,f
  1373  05CA  2DC7               	goto	u747
  1374  05CB  2DCC               	nop2
  1375  05CC                     l1027:
  1376                           
  1377                           ;lcd/lcd.c: 158:   RD3 = 0;
  1378  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  1379  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  1380  05CE  1188               	bcf	8,3	;volatile
  1381  05CF                     l1029:
  1382                           
  1383                           ;lcd/lcd.c: 159:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  1384  05CF  3004               	movlw	4
  1385  05D0  00F2               	movwf	??_LCD_Write_Char+1
  1386  05D1  303D               	movlw	61
  1387  05D2  00F1               	movwf	??_LCD_Write_Char
  1388  05D3                     u757:
  1389  05D3  0BF1               	decfsz	??_LCD_Write_Char,f
  1390  05D4  2DD3               	goto	u757
  1391  05D5  0BF2               	decfsz	??_LCD_Write_Char+1,f
  1392  05D6  2DD3               	goto	u757
  1393  05D7  2DD8               	nop2
  1394  05D8                     l55:
  1395  05D8  0008               	return
  1396  05D9                     __end_of_LCD_Write_Char:
  1397                           
  1398                           	psect	text6
  1399  0757                     __ptext6:	
  1400 ;; *************** function _LCD_Set_Cursor *****************
  1401 ;; Defined at:
  1402 ;;		line 68 in file "lcd/lcd.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  row             1    wreg     unsigned char 
  1405 ;;  column          1    4[COMMON] unsigned char 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  row             1    7[COMMON] unsigned char 
  1408 ;;  Temp            1   10[COMMON] unsigned char 
  1409 ;;  High4           1    9[COMMON] unsigned char 
  1410 ;;  Low4            1    8[COMMON] unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, status,2, status,0, pclath, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1420 ;;      Params:         1       0       0       0       0
  1421 ;;      Locals:         4       0       0       0       0
  1422 ;;      Temps:          2       0       0       0       0
  1423 ;;      Totals:         7       0       0       0       0
  1424 ;;Total ram usage:        7 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    2
  1427 ;; This function calls:
  1428 ;;		_LCD_CMD
  1429 ;; This function is called by:
  1430 ;;		_main
  1431 ;;		_LCD_Write_CharXY
  1432 ;;		_LCD_Write_StringXY
  1433 ;;		_LCD_Write_NumberXY
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           
  1438                           ;psect for function _LCD_Set_Cursor
  1439  0757                     _LCD_Set_Cursor:
  1440                           
  1441                           ;incstack = 0
  1442                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1443                           ;LCD_Set_Cursor@row stored from wreg
  1444  0757  00F7               	movwf	LCD_Set_Cursor@row
  1445  0758                     l1083:
  1446                           
  1447                           ;lcd/lcd.c: 68: void LCD_Set_Cursor(unsigned char row, unsigned char column);lcd/lcd.c: 
      +                          69: {;lcd/lcd.c: 70:   unsigned char Temp,Low4,High4;;lcd/lcd.c: 72:   if(row == 1)
  1448  0758  0377               	decf	LCD_Set_Cursor@row,w
  1449  0759  1D03               	btfss	3,2
  1450  075A  2F5C               	goto	u541
  1451  075B  2F5D               	goto	u540
  1452  075C                     u541:
  1453  075C  2F80               	goto	l1093
  1454  075D                     u540:
  1455  075D                     l1085:
  1456                           
  1457                           ;lcd/lcd.c: 73:   {;lcd/lcd.c: 74:     Temp = 0x80 + column - 1;
  1458  075D  0874               	movf	LCD_Set_Cursor@column,w
  1459  075E  3E7F               	addlw	127
  1460  075F  00F5               	movwf	??_LCD_Set_Cursor
  1461  0760  0875               	movf	??_LCD_Set_Cursor,w
  1462  0761  00FA               	movwf	LCD_Set_Cursor@Temp
  1463                           
  1464                           ;lcd/lcd.c: 76:     High4 = Temp >> 4;
  1465  0762  087A               	movf	LCD_Set_Cursor@Temp,w
  1466  0763  00F5               	movwf	??_LCD_Set_Cursor
  1467  0764  3004               	movlw	4
  1468  0765                     u555:
  1469  0765  1003               	clrc
  1470  0766  0CF5               	rrf	??_LCD_Set_Cursor,f
  1471  0767  3EFF               	addlw	-1
  1472  0768  1D03               	skipz
  1473  0769  2F65               	goto	u555
  1474  076A  0875               	movf	??_LCD_Set_Cursor,w
  1475  076B  00F6               	movwf	??_LCD_Set_Cursor+1
  1476  076C  0876               	movf	??_LCD_Set_Cursor+1,w
  1477  076D  00F9               	movwf	LCD_Set_Cursor@High4
  1478  076E                     l1087:
  1479                           
  1480                           ;lcd/lcd.c: 77:     Low4 = Temp & 0x0F;
  1481  076E  087A               	movf	LCD_Set_Cursor@Temp,w
  1482  076F  390F               	andlw	15
  1483  0770  00F5               	movwf	??_LCD_Set_Cursor
  1484  0771  0875               	movf	??_LCD_Set_Cursor,w
  1485  0772  00F8               	movwf	LCD_Set_Cursor@Low4
  1486  0773                     l1089:
  1487                           
  1488                           ;lcd/lcd.c: 78:     LCD_CMD(High4);
  1489  0773  0879               	movf	LCD_Set_Cursor@High4,w
  1490  0774  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1491  0779                     l1091:
  1492                           
  1493                           ;lcd/lcd.c: 79:     LCD_CMD(Low4);
  1494  0779  0878               	movf	LCD_Set_Cursor@Low4,w
  1495  077A  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1496                           
  1497                           ;lcd/lcd.c: 80:   }
  1498  077F  2FFB               	goto	l49
  1499  0780                     l1093:
  1500  0780  3002               	movlw	2
  1501  0781  0677               	xorwf	LCD_Set_Cursor@row,w
  1502  0782  1D03               	btfss	3,2
  1503  0783  2F85               	goto	u561
  1504  0784  2F86               	goto	u560
  1505  0785                     u561:
  1506  0785  2FA9               	goto	l1103
  1507  0786                     u560:
  1508  0786                     l1095:
  1509                           
  1510                           ;lcd/lcd.c: 82:   {;lcd/lcd.c: 83:     Temp = 0xC0 + column - 1;
  1511  0786  0874               	movf	LCD_Set_Cursor@column,w
  1512  0787  3EBF               	addlw	191
  1513  0788  00F5               	movwf	??_LCD_Set_Cursor
  1514  0789  0875               	movf	??_LCD_Set_Cursor,w
  1515  078A  00FA               	movwf	LCD_Set_Cursor@Temp
  1516                           
  1517                           ;lcd/lcd.c: 85:     High4 = Temp >> 4;
  1518  078B  087A               	movf	LCD_Set_Cursor@Temp,w
  1519  078C  00F5               	movwf	??_LCD_Set_Cursor
  1520  078D  3004               	movlw	4
  1521  078E                     u575:
  1522  078E  1003               	clrc
  1523  078F  0CF5               	rrf	??_LCD_Set_Cursor,f
  1524  0790  3EFF               	addlw	-1
  1525  0791  1D03               	skipz
  1526  0792  2F8E               	goto	u575
  1527  0793  0875               	movf	??_LCD_Set_Cursor,w
  1528  0794  00F6               	movwf	??_LCD_Set_Cursor+1
  1529  0795  0876               	movf	??_LCD_Set_Cursor+1,w
  1530  0796  00F9               	movwf	LCD_Set_Cursor@High4
  1531  0797                     l1097:
  1532                           
  1533                           ;lcd/lcd.c: 86:     Low4 = Temp & 0x0F;
  1534  0797  087A               	movf	LCD_Set_Cursor@Temp,w
  1535  0798  390F               	andlw	15
  1536  0799  00F5               	movwf	??_LCD_Set_Cursor
  1537  079A  0875               	movf	??_LCD_Set_Cursor,w
  1538  079B  00F8               	movwf	LCD_Set_Cursor@Low4
  1539  079C                     l1099:
  1540                           
  1541                           ;lcd/lcd.c: 87:     LCD_CMD(High4);
  1542  079C  0879               	movf	LCD_Set_Cursor@High4,w
  1543  079D  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1544  07A2                     l1101:
  1545                           
  1546                           ;lcd/lcd.c: 88:     LCD_CMD(Low4);
  1547  07A2  0878               	movf	LCD_Set_Cursor@Low4,w
  1548  07A3  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1549                           
  1550                           ;lcd/lcd.c: 89:   }
  1551  07A8  2FFB               	goto	l49
  1552  07A9                     l1103:
  1553  07A9  3003               	movlw	3
  1554  07AA  0677               	xorwf	LCD_Set_Cursor@row,w
  1555  07AB  1D03               	btfss	3,2
  1556  07AC  2FAE               	goto	u581
  1557  07AD  2FAF               	goto	u580
  1558  07AE                     u581:
  1559  07AE  2FD2               	goto	l1113
  1560  07AF                     u580:
  1561  07AF                     l1105:
  1562                           
  1563                           ;lcd/lcd.c: 91:   {;lcd/lcd.c: 92:    Temp = 0x94 + column - 1;
  1564  07AF  0874               	movf	LCD_Set_Cursor@column,w
  1565  07B0  3E93               	addlw	147
  1566  07B1  00F5               	movwf	??_LCD_Set_Cursor
  1567  07B2  0875               	movf	??_LCD_Set_Cursor,w
  1568  07B3  00FA               	movwf	LCD_Set_Cursor@Temp
  1569                           
  1570                           ;lcd/lcd.c: 94:     High4 = Temp >> 4;
  1571  07B4  087A               	movf	LCD_Set_Cursor@Temp,w
  1572  07B5  00F5               	movwf	??_LCD_Set_Cursor
  1573  07B6  3004               	movlw	4
  1574  07B7                     u595:
  1575  07B7  1003               	clrc
  1576  07B8  0CF5               	rrf	??_LCD_Set_Cursor,f
  1577  07B9  3EFF               	addlw	-1
  1578  07BA  1D03               	skipz
  1579  07BB  2FB7               	goto	u595
  1580  07BC  0875               	movf	??_LCD_Set_Cursor,w
  1581  07BD  00F6               	movwf	??_LCD_Set_Cursor+1
  1582  07BE  0876               	movf	??_LCD_Set_Cursor+1,w
  1583  07BF  00F9               	movwf	LCD_Set_Cursor@High4
  1584  07C0                     l1107:
  1585                           
  1586                           ;lcd/lcd.c: 95:     Low4 = Temp & 0x0F;
  1587  07C0  087A               	movf	LCD_Set_Cursor@Temp,w
  1588  07C1  390F               	andlw	15
  1589  07C2  00F5               	movwf	??_LCD_Set_Cursor
  1590  07C3  0875               	movf	??_LCD_Set_Cursor,w
  1591  07C4  00F8               	movwf	LCD_Set_Cursor@Low4
  1592  07C5                     l1109:
  1593                           
  1594                           ;lcd/lcd.c: 96:     LCD_CMD(High4);
  1595  07C5  0879               	movf	LCD_Set_Cursor@High4,w
  1596  07C6  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1597  07CB                     l1111:
  1598                           
  1599                           ;lcd/lcd.c: 97:     LCD_CMD(Low4);
  1600  07CB  0878               	movf	LCD_Set_Cursor@Low4,w
  1601  07CC  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1602                           
  1603                           ;lcd/lcd.c: 98:   }
  1604  07D1  2FFB               	goto	l49
  1605  07D2                     l1113:
  1606  07D2  3004               	movlw	4
  1607  07D3  0677               	xorwf	LCD_Set_Cursor@row,w
  1608  07D4  1D03               	btfss	3,2
  1609  07D5  2FD7               	goto	u601
  1610  07D6  2FD8               	goto	u600
  1611  07D7                     u601:
  1612  07D7  2FFB               	goto	l45
  1613  07D8                     u600:
  1614  07D8                     l1115:
  1615                           
  1616                           ;lcd/lcd.c: 100:   {;lcd/lcd.c: 101:    Temp = 0xD4 + column - 1;
  1617  07D8  0874               	movf	LCD_Set_Cursor@column,w
  1618  07D9  3ED3               	addlw	211
  1619  07DA  00F5               	movwf	??_LCD_Set_Cursor
  1620  07DB  0875               	movf	??_LCD_Set_Cursor,w
  1621  07DC  00FA               	movwf	LCD_Set_Cursor@Temp
  1622                           
  1623                           ;lcd/lcd.c: 103:     High4 = Temp >> 4;
  1624  07DD  087A               	movf	LCD_Set_Cursor@Temp,w
  1625  07DE  00F5               	movwf	??_LCD_Set_Cursor
  1626  07DF  3004               	movlw	4
  1627  07E0                     u615:
  1628  07E0  1003               	clrc
  1629  07E1  0CF5               	rrf	??_LCD_Set_Cursor,f
  1630  07E2  3EFF               	addlw	-1
  1631  07E3  1D03               	skipz
  1632  07E4  2FE0               	goto	u615
  1633  07E5  0875               	movf	??_LCD_Set_Cursor,w
  1634  07E6  00F6               	movwf	??_LCD_Set_Cursor+1
  1635  07E7  0876               	movf	??_LCD_Set_Cursor+1,w
  1636  07E8  00F9               	movwf	LCD_Set_Cursor@High4
  1637  07E9                     l1117:
  1638                           
  1639                           ;lcd/lcd.c: 104:     Low4 = Temp & 0x0F;
  1640  07E9  087A               	movf	LCD_Set_Cursor@Temp,w
  1641  07EA  390F               	andlw	15
  1642  07EB  00F5               	movwf	??_LCD_Set_Cursor
  1643  07EC  0875               	movf	??_LCD_Set_Cursor,w
  1644  07ED  00F8               	movwf	LCD_Set_Cursor@Low4
  1645  07EE                     l1119:
  1646                           
  1647                           ;lcd/lcd.c: 105:     LCD_CMD(High4);
  1648  07EE  0879               	movf	LCD_Set_Cursor@High4,w
  1649  07EF  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1650  07F4                     l1121:
  1651                           
  1652                           ;lcd/lcd.c: 106:     LCD_CMD(Low4);
  1653  07F4  0878               	movf	LCD_Set_Cursor@Low4,w
  1654  07F5  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1655  07FA  2FFB               	goto	l49
  1656  07FB                     l45:
  1657  07FB                     l49:
  1658  07FB  0008               	return
  1659  07FC                     __end_of_LCD_Set_Cursor:
  1660                           
  1661                           	psect	text7
  1662  0479                     __ptext7:	
  1663 ;; *************** function _LCD_SR *****************
  1664 ;; Defined at:
  1665 ;;		line 184 in file "lcd/lcd.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0, pclath, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1679 ;;      Params:         0       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0
  1682 ;;      Totals:         0       0       0       0       0
  1683 ;;Total ram usage:        0 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    2
  1686 ;; This function calls:
  1687 ;;		_LCD_CMD
  1688 ;; This function is called by:
  1689 ;;		_main
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           
  1694                           ;psect for function _LCD_SR
  1695  0479                     _LCD_SR:
  1696  0479                     l1169:	
  1697                           ;incstack = 0
  1698                           ; Regs used in _LCD_SR: [wreg+status,2+status,0+pclath+cstack]
  1699                           
  1700                           
  1701                           ;lcd/lcd.c: 187:  LCD_CMD(0x01);
  1702  0479  3001               	movlw	1
  1703  047A  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1704                           
  1705                           ;lcd/lcd.c: 188:  LCD_CMD(0x0C);
  1706  047F  300C               	movlw	12
  1707  0480  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1708  0485                     l67:
  1709  0485  0008               	return
  1710  0486                     __end_of_LCD_SR:
  1711                           
  1712                           	psect	text8
  1713  046C                     __ptext8:	
  1714 ;; *************** function _LCD_SL *****************
  1715 ;; Defined at:
  1716 ;;		line 175 in file "lcd/lcd.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2, status,0, pclath, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1730 ;;      Params:         0       0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0
  1733 ;;      Totals:         0       0       0       0       0
  1734 ;;Total ram usage:        0 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; Hardware stack levels required when called:    2
  1737 ;; This function calls:
  1738 ;;		_LCD_CMD
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           
  1745                           ;psect for function _LCD_SL
  1746  046C                     _LCD_SL:
  1747  046C                     l1167:	
  1748                           ;incstack = 0
  1749                           ; Regs used in _LCD_SL: [wreg+status,2+status,0+pclath+cstack]
  1750                           
  1751                           
  1752                           ;lcd/lcd.c: 178:  LCD_CMD(0x01);
  1753  046C  3001               	movlw	1
  1754  046D  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1755                           
  1756                           ;lcd/lcd.c: 179:  LCD_CMD(0x08);
  1757  0472  3008               	movlw	8
  1758  0473  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1759  0478                     l64:
  1760  0478  0008               	return
  1761  0479                     __end_of_LCD_SL:
  1762                           
  1763                           	psect	text9
  1764  05D9                     __ptext9:	
  1765 ;; *************** function _LCD_Init *****************
  1766 ;; Defined at:
  1767 ;;		line 113 in file "lcd/lcd.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0, pclath, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1781 ;;      Params:         0       0       0       0       0
  1782 ;;      Locals:         0       0       0       0       0
  1783 ;;      Temps:          2       0       0       0       0
  1784 ;;      Totals:         2       0       0       0       0
  1785 ;;Total ram usage:        2 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    2
  1788 ;; This function calls:
  1789 ;;		_LCD_CMD
  1790 ;;		_LCD_DATA
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _LCD_Init
  1798  05D9                     _LCD_Init:
  1799  05D9                     l1123:	
  1800                           ;incstack = 0
  1801                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1802                           
  1803                           
  1804                           ;lcd/lcd.c: 116:   TRISD = 0x00;
  1805  05D9  1683               	bsf	3,5	;RP0=1, select bank1
  1806  05DA  1303               	bcf	3,6	;RP1=0, select bank1
  1807  05DB  0188               	clrf	8	;volatile
  1808  05DC                     l1125:
  1809                           
  1810                           ;lcd/lcd.c: 117:   TRISD2 = 0;
  1811  05DC  1108               	bcf	8,2	;volatile
  1812  05DD                     l1127:
  1813                           
  1814                           ;lcd/lcd.c: 118:   TRISD3 = 0;
  1815  05DD  1188               	bcf	8,3	;volatile
  1816  05DE                     l1129:
  1817                           
  1818                           ;lcd/lcd.c: 121:   LCD_DATA(0x00);
  1819  05DE  3000               	movlw	0
  1820  05DF  120A  118A  249C  120A  118A  	fcall	_LCD_DATA
  1821  05E4                     l1131:
  1822                           
  1823                           ;lcd/lcd.c: 122:   _delay((unsigned long)((30)*(20000000/4000.0)));
  1824  05E4  30C3               	movlw	195
  1825  05E5  00F5               	movwf	??_LCD_Init+1
  1826  05E6  30CD               	movlw	205
  1827  05E7  00F4               	movwf	??_LCD_Init
  1828  05E8                     u767:
  1829  05E8  0BF4               	decfsz	??_LCD_Init,f
  1830  05E9  2DE8               	goto	u767
  1831  05EA  0BF5               	decfsz	??_LCD_Init+1,f
  1832  05EB  2DE8               	goto	u767
  1833  05EC                     l1133:
  1834                           
  1835                           ;lcd/lcd.c: 123:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  1836  05EC  3004               	movlw	4
  1837  05ED  00F5               	movwf	??_LCD_Init+1
  1838  05EE  303D               	movlw	61
  1839  05EF  00F4               	movwf	??_LCD_Init
  1840  05F0                     u777:
  1841  05F0  0BF4               	decfsz	??_LCD_Init,f
  1842  05F1  2DF0               	goto	u777
  1843  05F2  0BF5               	decfsz	??_LCD_Init+1,f
  1844  05F3  2DF0               	goto	u777
  1845  05F4  2DF5               	nop2
  1846  05F5                     l1135:
  1847                           
  1848                           ;lcd/lcd.c: 124:   LCD_CMD(0x03);
  1849  05F5  3003               	movlw	3
  1850  05F6  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1851  05FB                     l1137:
  1852                           
  1853                           ;lcd/lcd.c: 125:   _delay((unsigned long)((5)*(20000000/4000.0)));
  1854  05FB  3021               	movlw	33
  1855  05FC  00F5               	movwf	??_LCD_Init+1
  1856  05FD  3076               	movlw	118
  1857  05FE  00F4               	movwf	??_LCD_Init
  1858  05FF                     u787:
  1859  05FF  0BF4               	decfsz	??_LCD_Init,f
  1860  0600  2DFF               	goto	u787
  1861  0601  0BF5               	decfsz	??_LCD_Init+1,f
  1862  0602  2DFF               	goto	u787
  1863  0603  0000               	nop
  1864  0604                     l1139:
  1865                           
  1866                           ;lcd/lcd.c: 126:   LCD_CMD(0x03);
  1867  0604  3003               	movlw	3
  1868  0605  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1869  060A                     l1141:
  1870                           
  1871                           ;lcd/lcd.c: 127:   _delay((unsigned long)((150)*(20000000/4000000.0)));
  1872  060A  30F9               	movlw	249
  1873  060B  00F4               	movwf	??_LCD_Init
  1874  060C                     u797:
  1875  060C  0BF4               	decfsz	??_LCD_Init,f
  1876  060D  2E0C               	goto	u797
  1877  060E  2E0F               	nop2
  1878  060F                     l1143:
  1879                           
  1880                           ;lcd/lcd.c: 129:   LCD_CMD(0x03);
  1881  060F  3003               	movlw	3
  1882  0610  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1883  0615                     l1145:
  1884                           
  1885                           ;lcd/lcd.c: 130:   LCD_CMD(0x02);
  1886  0615  3002               	movlw	2
  1887  0616  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1888  061B                     l1147:
  1889                           
  1890                           ;lcd/lcd.c: 131:   LCD_CMD(0x02);
  1891  061B  3002               	movlw	2
  1892  061C  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1893  0621                     l1149:
  1894                           
  1895                           ;lcd/lcd.c: 132:   LCD_CMD(0x08);
  1896  0621  3008               	movlw	8
  1897  0622  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1898  0627                     l1151:
  1899                           
  1900                           ;lcd/lcd.c: 133:   LCD_CMD(0x00);
  1901  0627  3000               	movlw	0
  1902  0628  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1903  062D                     l1153:
  1904                           
  1905                           ;lcd/lcd.c: 134:   LCD_CMD(0x0C);
  1906  062D  300C               	movlw	12
  1907  062E  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1908  0633                     l1155:
  1909                           
  1910                           ;lcd/lcd.c: 135:   LCD_CMD(0x00);
  1911  0633  3000               	movlw	0
  1912  0634  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1913  0639                     l1157:
  1914                           
  1915                           ;lcd/lcd.c: 136:   LCD_CMD(0x06);
  1916  0639  3006               	movlw	6
  1917  063A  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1918  063F                     l52:
  1919  063F  0008               	return
  1920  0640                     __end_of_LCD_Init:
  1921                           
  1922                           	psect	text10
  1923  0486                     __ptext10:	
  1924 ;; *************** function _LCD_Clear *****************
  1925 ;; Defined at:
  1926 ;;		line 54 in file "lcd/lcd.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;		None
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, status,2, status,0, pclath, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1940 ;;      Params:         0       0       0       0       0
  1941 ;;      Locals:         0       0       0       0       0
  1942 ;;      Temps:          2       0       0       0       0
  1943 ;;      Totals:         2       0       0       0       0
  1944 ;;Total ram usage:        2 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    2
  1947 ;; This function calls:
  1948 ;;		_LCD_CMD
  1949 ;; This function is called by:
  1950 ;;		_main
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           
  1955                           ;psect for function _LCD_Clear
  1956  0486                     _LCD_Clear:
  1957  0486                     l1079:	
  1958                           ;incstack = 0
  1959                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  1960                           
  1961                           
  1962                           ;lcd/lcd.c: 57:   LCD_CMD(0);
  1963  0486  3000               	movlw	0
  1964  0487  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1965                           
  1966                           ;lcd/lcd.c: 58:   LCD_CMD(1);
  1967  048C  3001               	movlw	1
  1968  048D  120A  118A  24BE  120A  118A  	fcall	_LCD_CMD
  1969  0492                     l1081:
  1970                           
  1971                           ;lcd/lcd.c: 59:   _delay((unsigned long)((2)*(20000000/4000.0)));
  1972  0492  300D               	movlw	13
  1973  0493  00F5               	movwf	??_LCD_Clear+1
  1974  0494  30FB               	movlw	251
  1975  0495  00F4               	movwf	??_LCD_Clear
  1976  0496                     u807:
  1977  0496  0BF4               	decfsz	??_LCD_Clear,f
  1978  0497  2C96               	goto	u807
  1979  0498  0BF5               	decfsz	??_LCD_Clear+1,f
  1980  0499  2C96               	goto	u807
  1981  049A  2C9B               	nop2
  1982  049B                     l39:
  1983  049B  0008               	return
  1984  049C                     __end_of_LCD_Clear:
  1985                           
  1986                           	psect	text11
  1987  04BE                     __ptext11:	
  1988 ;; *************** function _LCD_CMD *****************
  1989 ;; Defined at:
  1990 ;;		line 33 in file "lcd/lcd.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  CMD             1    wreg     unsigned char 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  CMD             1    3[COMMON] unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		wreg, status,2, status,0, pclath, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2004 ;;      Params:         0       0       0       0       0
  2005 ;;      Locals:         1       0       0       0       0
  2006 ;;      Temps:          2       0       0       0       0
  2007 ;;      Totals:         3       0       0       0       0
  2008 ;;Total ram usage:        3 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; Hardware stack levels required when called:    1
  2011 ;; This function calls:
  2012 ;;		_LCD_DATA
  2013 ;; This function is called by:
  2014 ;;		_LCD_Clear
  2015 ;;		_LCD_Set_Cursor
  2016 ;;		_LCD_Init
  2017 ;;		_LCD_SL
  2018 ;;		_LCD_SR
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _LCD_CMD
  2024  04BE                     _LCD_CMD:
  2025                           
  2026                           ;incstack = 0
  2027                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  2028                           ;LCD_CMD@CMD stored from wreg
  2029  04BE  00F3               	movwf	LCD_CMD@CMD
  2030  04BF                     l993:
  2031                           
  2032                           ;lcd/lcd.c: 33: void LCD_CMD(unsigned char CMD);lcd/lcd.c: 34: {;lcd/lcd.c: 35:   RD2 = 
      +                          0;
  2033  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2034  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2035  04C1  1108               	bcf	8,2	;volatile
  2036  04C2                     l995:
  2037                           
  2038                           ;lcd/lcd.c: 36:   LCD_DATA(CMD);
  2039  04C2  0873               	movf	LCD_CMD@CMD,w
  2040  04C3  120A  118A  249C  120A  118A  	fcall	_LCD_DATA
  2041  04C8                     l997:
  2042                           
  2043                           ;lcd/lcd.c: 37:   RD3 = 1;
  2044  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2045  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  2046  04CA  1588               	bsf	8,3	;volatile
  2047  04CB                     l999:
  2048                           
  2049                           ;lcd/lcd.c: 40:   if(CMD<=0x02)
  2050  04CB  3003               	movlw	3
  2051  04CC  0273               	subwf	LCD_CMD@CMD,w
  2052  04CD  1803               	skipnc
  2053  04CE  2CD0               	goto	u391
  2054  04CF  2CD1               	goto	u390
  2055  04D0                     u391:
  2056  04D0  2CDB               	goto	l1003
  2057  04D1                     u390:
  2058  04D1                     l1001:
  2059                           
  2060                           ;lcd/lcd.c: 41:   {;lcd/lcd.c: 42:       _delay((unsigned long)((2)*(20000000/4000.0)));
  2061  04D1  300D               	movlw	13
  2062  04D2  00F2               	movwf	??_LCD_CMD+1
  2063  04D3  30FB               	movlw	251
  2064  04D4  00F1               	movwf	??_LCD_CMD
  2065  04D5                     u817:
  2066  04D5  0BF1               	decfsz	??_LCD_CMD,f
  2067  04D6  2CD5               	goto	u817
  2068  04D7  0BF2               	decfsz	??_LCD_CMD+1,f
  2069  04D8  2CD5               	goto	u817
  2070  04D9  2CDA               	nop2
  2071                           
  2072                           ;lcd/lcd.c: 43:   }else{
  2073  04DA  2CDF               	goto	l1005
  2074  04DB                     l1003:
  2075                           
  2076                           ;lcd/lcd.c: 44:       _delay((unsigned long)((50)*(20000000/4000000.0)));
  2077  04DB  3053               	movlw	83
  2078  04DC  00F1               	movwf	??_LCD_CMD
  2079  04DD                     u827:
  2080  04DD  0BF1               	decfsz	??_LCD_CMD,f
  2081  04DE  2CDD               	goto	u827
  2082  04DF                     l1005:
  2083                           
  2084                           ;lcd/lcd.c: 47:   RD3 = 0;
  2085  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  2086  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  2087  04E1  1188               	bcf	8,3	;volatile
  2088  04E2                     l36:
  2089  04E2  0008               	return
  2090  04E3                     __end_of_LCD_CMD:
  2091                           
  2092                           	psect	text12
  2093  049C                     __ptext12:	
  2094 ;; *************** function _LCD_DATA *****************
  2095 ;; Defined at:
  2096 ;;		line 6 in file "lcd/lcd.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  Data            1    wreg     unsigned char 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  Data            1    0[COMMON] unsigned char 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2110 ;;      Params:         0       0       0       0       0
  2111 ;;      Locals:         1       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0
  2113 ;;      Totals:         1       0       0       0       0
  2114 ;;Total ram usage:        1 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; This function calls:
  2117 ;;		Nothing
  2118 ;; This function is called by:
  2119 ;;		_LCD_CMD
  2120 ;;		_LCD_Init
  2121 ;;		_LCD_Write_Char
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           
  2126                           ;psect for function _LCD_DATA
  2127  049C                     _LCD_DATA:
  2128                           
  2129                           ;incstack = 0
  2130                           ; Regs used in _LCD_DATA: [wreg]
  2131                           ;LCD_DATA@Data stored from wreg
  2132  049C  00F0               	movwf	LCD_DATA@Data
  2133  049D                     l983:
  2134                           
  2135                           ;lcd/lcd.c: 6: void LCD_DATA(unsigned char Data);lcd/lcd.c: 7: {;lcd/lcd.c: 8:   if(Data
      +                           & 1)
  2136  049D  1C70               	btfss	LCD_DATA@Data,0
  2137  049E  2CA0               	goto	u351
  2138  049F  2CA1               	goto	u350
  2139  04A0                     u351:
  2140  04A0  2CA5               	goto	l23
  2141  04A1                     u350:
  2142  04A1                     l985:
  2143                           
  2144                           ;lcd/lcd.c: 9:     RD4 = 1;
  2145  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  2146  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  2147  04A3  1608               	bsf	8,4	;volatile
  2148  04A4  2CA8               	goto	l24
  2149  04A5                     l23:	
  2150                           ;lcd/lcd.c: 10:   else
  2151                           
  2152                           
  2153                           ;lcd/lcd.c: 11:     RD4 = 0;
  2154  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2155  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  2156  04A7  1208               	bcf	8,4	;volatile
  2157  04A8                     l24:
  2158                           
  2159                           ;lcd/lcd.c: 13:   if(Data & 2)
  2160  04A8  1CF0               	btfss	LCD_DATA@Data,1
  2161  04A9  2CAB               	goto	u361
  2162  04AA  2CAC               	goto	u360
  2163  04AB                     u361:
  2164  04AB  2CAE               	goto	l25
  2165  04AC                     u360:
  2166  04AC                     l987:
  2167                           
  2168                           ;lcd/lcd.c: 14:     RD5 = 1;
  2169  04AC  1688               	bsf	8,5	;volatile
  2170  04AD  2CAF               	goto	l26
  2171  04AE                     l25:	
  2172                           ;lcd/lcd.c: 15:   else
  2173                           
  2174                           
  2175                           ;lcd/lcd.c: 16:     RD5 = 0;
  2176  04AE  1288               	bcf	8,5	;volatile
  2177  04AF                     l26:
  2178                           
  2179                           ;lcd/lcd.c: 18:   if(Data & 4)
  2180  04AF  1D70               	btfss	LCD_DATA@Data,2
  2181  04B0  2CB2               	goto	u371
  2182  04B1  2CB3               	goto	u370
  2183  04B2                     u371:
  2184  04B2  2CB5               	goto	l27
  2185  04B3                     u370:
  2186  04B3                     l989:
  2187                           
  2188                           ;lcd/lcd.c: 19:     RD6 = 1;
  2189  04B3  1708               	bsf	8,6	;volatile
  2190  04B4  2CB6               	goto	l28
  2191  04B5                     l27:	
  2192                           ;lcd/lcd.c: 20:   else
  2193                           
  2194                           
  2195                           ;lcd/lcd.c: 21:     RD6 = 0;
  2196  04B5  1308               	bcf	8,6	;volatile
  2197  04B6                     l28:
  2198                           
  2199                           ;lcd/lcd.c: 23:   if(Data & 8)
  2200  04B6  1DF0               	btfss	LCD_DATA@Data,3
  2201  04B7  2CB9               	goto	u381
  2202  04B8  2CBA               	goto	u380
  2203  04B9                     u381:
  2204  04B9  2CBC               	goto	l29
  2205  04BA                     u380:
  2206  04BA                     l991:
  2207                           
  2208                           ;lcd/lcd.c: 24:     RD7 = 1;
  2209  04BA  1788               	bsf	8,7	;volatile
  2210  04BB  2CBD               	goto	l31
  2211  04BC                     l29:	
  2212                           ;lcd/lcd.c: 25:   else
  2213                           
  2214                           
  2215                           ;lcd/lcd.c: 26:     RD7 = 0;
  2216  04BC  1388               	bcf	8,7	;volatile
  2217  04BD                     l31:
  2218  04BD  0008               	return
  2219  04BE                     __end_of_LCD_DATA:
  2220  007E                     btemp	set	126	;btemp
  2221  007E                     wtemp0	set	126

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     32      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@str	PTR unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Number
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Number->___lwdiv
    _LCD_Write_Char->_LCD_DATA
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_SR->_LCD_CMD
    _LCD_SL->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_DATA

Critical Paths under _main in BANK0

    _main->_LCD_Write_Number

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    3390
                                             25 BANK0      7     7      0
                          _LCD_Clear
                           _LCD_Init
                             _LCD_SL
                             _LCD_SR
                     _LCD_Set_Cursor
                   _LCD_Write_Number
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     3     3      0     334
                                              6 COMMON     3     3      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Number                                    29    27      2    1296
                                              8 COMMON     4     2      2
                                              0 BANK0     25    25      0
                     _LCD_Write_Char
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       5     5      0     178
                                              1 COMMON     5     5      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1    1052
                                              4 COMMON     7     6      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_SR                                               0     0      0     132
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_SL                                               0     0      0     132
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     220
                                              4 COMMON     2     2      0
                            _LCD_CMD
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0     132
                                              4 COMMON     2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              3     3      0     132
                                              1 COMMON     3     3      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (3) _LCD_DATA                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_CMD
       _LCD_DATA
   _LCD_Init
     _LCD_CMD
       _LCD_DATA
     _LCD_DATA
   _LCD_SL
     _LCD_CMD
       _LCD_DATA
   _LCD_SR
     _LCD_CMD
       _LCD_DATA
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_DATA
   _LCD_Write_Number
     _LCD_Write_Char
       _LCD_DATA
     ___lwdiv
     ___lwmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_DATA

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      20       5       40.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Aug 21 19:20:19 2022

                        pc 0002                         l31 04BD                         l23 04A5  
                       l24 04A8                         l25 04AE                         l26 04AF  
                       l27 04B5                         l28 04B6                         l36 04E2  
                       l52 063F                         l29 04BC                         l45 07FB  
                       l61 0507                         l39 049B                         l55 05D8  
                       l64 0478                         l49 07FB                         l67 0485  
                       l78 06BF                         fsr 0004                        l475 0585  
                      l485 0541                        l991 04BA                        l983 049D  
                      l985 04A1                        l993 04BF                        l987 04AC  
                      l995 04C2                        l989 04B3                        l997 04C8  
                      l999 04CB                        _RD2 0042                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        u410 054A                        u411 0549  
                      u500 0520                        u405 0597                        u501 051F  
                      u350 04A1                        u430 055C                        u510 052A  
                      u351 04A0                        u431 055B                        u511 0529  
                      u360 04AC                        u600 07D8                        u361 04AB  
                      u601 07D7                        u425 054E                        u370 04B3  
                      u450 056D                        u530 053D                        u371 04B2  
                      u451 056C                        u531 053C                        u515 0526  
                      u380 04BA                        u540 075D                        u620 0507  
                      u381 04B9                        u541 075C                        u445 055D  
                      u525 0531                        u621 0506                        u390 04D1  
                      u470 0581                        u630 064A                        u391 04D0  
                      u615 07E0                        u471 0580                        u455 0569  
                      u631 0649                        u560 0786                        u480 050E  
                      u640 065C                        u561 0785                        u465 0575  
                      u481 050D                        u641 065B                        u650 0696  
                      u555 0765                        u651 0695                        u707 0707  
                      u580 07AF                        u660 06A4                        u581 07AE  
                      u661 06A3                        u717 0733                        u670 0727  
                      u807 0496                        u575 078E                        u727 05A9  
                      u495 0512                        u671 0726                        u680 0753  
                      u817 04D5                        u737 05B5                        u681 0752  
                      u827 04DD                        u595 07B7                        u747 05C7  
                      u675 0723                        u757 05D3                        u685 074F  
                      u767 05E8                        u777 05F0                        u697 06F5  
                      u787 05FF                        u797 060C                        fsr0 0004  
                      indf 0000            __end_of_LCD_CMD 04E3             _LCD_Set_Cursor 0757  
                     l1001 04D1                       l1003 04DB                       l1011 0594  
                     l1005 04DF                       l1101 07A2                       l1021 05BA  
                     l1013 05A2                       l1111 07CB                       l1103 07A9  
                     l1023 05C0                       l1015 05A5                       l1007 0587  
                     l1031 0542                       l1121 07F4                       l1105 07AF  
                     l1113 07D2                       l1025 05C3                       l1017 05AE  
                     l1009 0591                       l1041 0558                       l1033 0544  
                     l1201 06B6                       l1131 05E4                       l1123 05D9  
                     l1115 07D8                       l1107 07C0                       l1027 05CC  
                     l1019 05B1                       l1051 057B                       l1043 055C  
                     l1035 054A                       l1141 060A                       l1133 05EC  
                     l1125 05DC                       l1117 07E9                       l1109 07C5  
                     l1029 05CF                       l1045 056D                       l1037 054D  
                     l1053 0581                       l1061 0511                       l1221 06CE  
                     l1151 0627                       l1143 060F                       l1135 05F5  
                     l1127 05DD                       l1119 07EE                       l1047 0573  
                     l1039 0554                       l1071 0530                       l1063 0518  
                     l1223 06D6                       l1215 06C0                       l1081 0492  
                     l1153 062D                       l1145 0615                       l1137 05FB  
                     l1129 05DE                       l1049 0574                       l1073 0537  
                     l1065 051C                       l1057 0508                       l1161 04E7  
                     l1241 071A                       l1225 06DC                       l1217 06C4  
                     l1155 0633                       l1147 061B                       l1139 0604  
                     l1091 0779                       l1083 0758                       l1067 0520  
                     l1059 050E                       l1075 053D                       l1171 0640  
                     l1163 04F4                       l1251 0739                       l1243 0727  
                     l1235 06FF                       l1227 06E4                       l1219 06C9  
                     l1157 0639                       l1149 0621                       l1085 075D  
                     l1093 0780                       l1069 052A                       l1173 0644  
                     l1165 04FA                       l1253 073E                       l1237 070D  
                     l1229 06FB                       l1079 0486                       l1167 046C  
                     l1095 0786                       l1087 076E                       l1191 0696  
                     l1183 065D                       l1175 064A                       l1159 04E4  
                     l1255 0746                       l1239 0712                       l1169 0479  
                     l1097 0797                       l1089 0773                       l1193 06A0  
                     l1185 0677                       l1177 064F                       l1249 072B  
                     l1099 079C                       l1187 0688                       l1179 0656  
                     l1197 06A5                       l1189 0690                       l1199 06B0  
      LCD_Write_String@str 0078                       STR_1 0009          ?_LCD_Write_Number 0078  
        ?_LCD_Write_String 0070                       _main 06C0         __size_of_LCD_Clear 0016  
                     btemp 007E         ??_LCD_Write_Number 007A                       start 0000  
       ??_LCD_Write_String 0076           __end_of_LCD_DATA 04BE           __end_of_LCD_Init 0640  
                    ?_main 0070            __end_of___lwdiv 0586            __end_of___lwmod 0542  
                    _TRISD 0088     __end_of_LCD_Set_Cursor 07FC                      main@i 003C  
                    pclath 000A                      status 0003                      wtemp0 007E  
           _LCD_Write_Char 0586            __initialization 07FC               __end_of_main 0757  
                   ??_main 0039          __end_of_LCD_Clear 049C                  ??_LCD_CMD 0071  
          ?_LCD_Set_Cursor 0074                     _ADCON1 009F                     _LCD_SL 046C  
                   _LCD_SR 0479                     _TRISD2 0442                     _TRISD3 0443  
   __end_of_LCD_Write_Char 05D9                  ??___lwdiv 0074                  ??___lwmod 0074  
                ?_LCD_DATA 0070    __end_of__initialization 07FC                  ?_LCD_Init 0070  
          ?_LCD_Write_Char 0070             __pcstackCOMMON 0070                    ?_LCD_SL 0070  
                  ?_LCD_SR 0070                 ??_LCD_DATA 0070                 ??_LCD_Init 0074  
               __pmaintext 06C0  __size_of_LCD_Write_Number 0080  __size_of_LCD_Write_String 0025  
                  _LCD_CMD 04BE                 __stringtab 0003            __size_of_LCD_SL 000D  
          __size_of_LCD_SR 000D                    ___lwdiv 0542                    ___lwmod 0508  
         ??_LCD_Set_Cursor 0075                    __ptext1 04E3                    __ptext2 0640  
                  __ptext3 0508                    __ptext4 0542                    __ptext5 0586  
                  __ptext6 0757                    __ptext7 0479                    __ptext8 046C  
                  __ptext9 05D9                  _LCD_Clear 0486       end_of_initialization 07FC  
               LCD_CMD@CMD 0073          LCD_Write_Number@c 0036          LCD_Write_Number@k 0034  
        LCD_Write_Number@p 0037                 ?_LCD_Clear 0070          LCD_Write_String@i 0076  
         ??_LCD_Write_Char 0071             __end_of_LCD_SL 0479             __end_of_LCD_SR 0486  
        __size_of_LCD_DATA 0022          __size_of_LCD_Init 0067           _LCD_Write_Number 0640  
         _LCD_Write_String 04E3        start_initialization 07FC                   ??_LCD_SL 0074  
                 ??_LCD_SR 0074                   ?_LCD_CMD 0070                  ___latbits 0002  
            __pcstackBANK0 0020                ??_LCD_Clear 0074           ___lwdiv@dividend 0072  
                 ?___lwdiv 0070                   ?___lwmod 0070                  __pstrings 0003  
         ___lwdiv@quotient 0075                   _LCD_DATA 049C                   _LCD_Init 05D9  
              __stringbase 0008                  main@i_102 003E           __size_of_LCD_CMD 0025  
     LCD_Set_Cursor@column 0074   __end_of_LCD_Write_Number 06C0   __end_of_LCD_Write_String 0508  
      LCD_Write_Char@High4 0074           __size_of___lwdiv 0044           __size_of___lwmod 003A  
       __end_of__stringtab 0009            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 0486                   __ptext11 04BE                   __ptext12 049C  
  __size_of_LCD_Set_Cursor 00A5              __size_of_main 0097        LCD_Set_Cursor@High4 0079  
   LCD_Write_Number@number 0078         LCD_Write_Char@Data 0075         LCD_Write_Char@Low4 0073  
         ___lwmod@dividend 0072                  stringcode 0003    __size_of_LCD_Write_Char 0053  
       LCD_Set_Cursor@Low4 0078         LCD_Set_Cursor@Temp 007A               LCD_DATA@Data 0070  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 0003  
                 stringtab 0003          LCD_Set_Cursor@row 0077        LCD_Write_Number@num 0020  
